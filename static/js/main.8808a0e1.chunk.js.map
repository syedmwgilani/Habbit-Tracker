{"version":3,"sources":["helperModule.js","App.js","Habits.js","SaveButton.js","WeekInput.js","FormErrors.js","HabitTemplate.js","HabitTemplateEdit.js","HabitTemplates.js","index.js"],"names":["module","exports","getNestedVal","obj","propArr","reduce","innerObj","prop","level","getInnerObj","propLessOneLev","slice","length","this","setNestedVal","value","arr","generateUIDKey","ranNumStr","Math","floor","random","toString","count","i","addPrefix","condition","sting","prefix","objectIsEmpty","Object","keys","dot","defaultVal","returnDefault","args","acc","cur","isDate","dateStr","matches","match","Date","parse","getDate","Number","parseInt","App","className","src","alt","to","href","title","target","rel","require","InnerBar","props","progPercent","round","progress","dailyOccurrence","innerBar","width","style","name","ProgressBar","star","onClick","onClickDecrement","Habits","today","dayOfTheWeek","getDay","monthStr","getMonth","dayStr","dateKeyString","getFullYear","dateShortenedFormatString","substring","date","JSONactiveHabitTemp","localStorage","getItem","activeHabitTemp","JSON","console","log","habits","JSONhabits","key","startDateTime","startDate","getTime","endDateTime","endDate","weeklyOccurrence","isNaN","habit","oldHabitsData","state","habitsJson","stringify","setItem","id","setState","saveHabitLocalStorage","bind","previousDate","nextDate","habitsEleMap","map","event","incrementProgress","decrementProgress","message","showToday","toDateString","previousDay","nextDay","Component","SaveButton","savingMessage","setTimeout","endOfSaveFunction","saveButton","setSaveMessages","classNameSaving","WeekInput","htmlFor","type","checked","Monday","onChange","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","FormErrors","showMessage","HabitTemplate","valid_startDate","valid_endDate","copyState","split","validFieldName","uid","showMessageOrSaveButton","weekdayChecked","values","includes","saveStateToLocalStorage","setEmptyState","handleInputChange","handleDateChange","placeholder","NavigatationSaveButton","navigate","useNavigate","NavigatationCancelButton","HabitTemplateEdit","habitId","window","location","pathname","habitExists","showSaveButton","content","EditButton","Day","day","keyVal","HabitTemplates","habitTempString","JSONHabitTemp","habitTemps","saveToLocalStorage","daysOfTheWeeks","activeHabitTempList","push","handleRemove","rootElement","document","getElementById","direct","sessionStorage","removeItem","render","path","element"],"mappings":"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","file":"static/js/main.8808a0e1.chunk.js","sourcesContent":["module.exports = {\n    getNestedVal: function (obj, propArr) {\n        return propArr.reduce((innerObj, prop, level) => {\n            return innerObj[prop]\n        }, obj);\n    },\n\n\n    getInnerObj: function (obj, propArr) {\n        const propLessOneLev = propArr.slice(0, propArr.length - 1)\n        return this.getNestedVal(obj, propLessOneLev)\n    },\n\n    setNestedVal: function (obj, propArr, value) {\n        return propArr.reduce((innerObj, prop, level, arr) => {\n            if (level === arr.length - 1) {\n                innerObj[prop] = value;\n                return innerObj;\n            }\n\n            return innerObj[prop]\n        }, obj);\n    },\n\n    //obj - check object keys to see if id exists\n    generateUIDKey: function (obj) {\n        let ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        //if ranNumStr < 16 pad with 0's\n        if(ranNumStr.length<16) {\n            let count = 16 - ranNumStr.length\n            for(let i=0; i<count; i++) ranNumStr += '0'\n        }\n        while (obj[ranNumStr]) {\n            ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n            if(ranNumStr.length<16) {\n                let count = 16 - ranNumStr.length\n                for(let i=0; i<count; i++) ranNumStr += '0'\n            }\n        }\n        return ranNumStr;\n    },\n\n    addPrefix: function (condition, sting, prefix) {\n        return condition() ? sting : prefix + sting\n    },\n\n    objectIsEmpty: function (obj) {\n        return Object.keys(obj).length === 0;\n    },\n\n    // Used to traverse an object and its potential properties.\n    // If property in list is not found then defaultVal is returned.\n    // ex: dot(false, props, 'weeklyOccurrence', 'wednesday')\n    dot: function (defaultVal, ...args) {\n        let returnDefault = false;\n\n        if (typeof (args[0]) !== 'object')\n            return defaultVal\n\n        return args.reduce(function (acc, cur) {\n            if (returnDefault)\n                return defaultVal;\n            if (typeof (acc[cur]) === 'undefined' || acc[cur] === null) {\n                returnDefault = true;\n                return defaultVal;\n            }\n            return acc[cur];\n        })\n    },\n\n    // https://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript\n    isDate: function (dateStr) {\n        const matches = dateStr.match(/^\\d?\\d\\/(\\d?\\d)\\/\\d{4}$/);\n        return matches ? !!Date.parse(dateStr) && new Date(dateStr).getDate() === Number.parseInt(matches[1]) : false;\n    },\n}","import { Outlet, Link } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <img className=\"header-logo\" src=\"logo48.svg\" alt=\"Habit Tracker Logo\"/>\n        <h1 className=\"header-text\">Habit Tracker</h1>\n      </header>\n\n      <nav>\n        <Link className=\"tab\" to=\"/habit-tracker/habits\">Schedule</Link>\n        <Link className=\"tab\" to=\"/habit-tracker/habit-template\">Add A Habit</Link>\n        <Link className=\"tab\" to=\"/habit-tracker/habit-templates\">All My Habits</Link>\n      </nav>\n\n      <Outlet />\n\n      <footer>\n        <span>Explore more projects made by me on <a href=\"https://github.com/syedmwgilani\" title=\"github\" target=\"_blank\" rel=\"noreferrer\">Github</a>.</span>\n      </footer>\n    </div>\n  );\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nconst { addPrefix } = require('./helperModule.js')\n\n\nfunction InnerBar(props) {\n    const progPercent = Math.round(props.progress / props.dailyOccurrence * 100)\n    const barSize = progPercent < 100 ? progPercent : 100\n\n    const innerBar = {\n        width: barSize + '%',\n    }\n\n    return (\n        <div className=\"inner-bar\" style={innerBar}>\n            <span className=\"inner-bar-text-left\">+</span>\n            <span className=\"inner-bar-text-center\">{props.name}</span>\n            <span className=\"inner-bar-text-right\">{props.progress} / {props.dailyOccurrence}</span>\n        </div>\n    )\n}\n\nfunction ProgressBar(props) {\n    const star = props.progress >= props.dailyOccurrence ? <span className=\"icon-star-full\"></span> : <span></span>\n\n    return (\n        <div>\n            <div className=\"star-container\">\n                <div className=\"star-inner-content\">\n                    {star}\n                </div>\n            </div>\n            <div className=\"progress-bar\" onClick={props.onClick}>\n                <InnerBar progress={props.progress}\n                    name={props.name}\n                    dailyOccurrence={props.dailyOccurrence} />\n            </div>\n            <div className=\"decrement-button ml1\" onClick={props.onClickDecrement}>\n                <div className=\"decrement-inner-button\">\n                    <span className=\"decrement-inner-button-content\">-</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nclass Habits extends Component {\n    constructor(props) {\n        super(props)\n\n        const today = new Date()\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const dayOfTheWeek = daysOfTheWeeks[today.getDay()]\n\n        const monthStr = (today.getMonth() + 1).toString()\n        const dayStr = today.getDate().toString()\n        const dateKeyString = today.getFullYear() + '_'\n            + addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '_'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n\n        const dateShortenedFormatString = addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '/'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n            + '/'\n            + today.getFullYear().toString().substring(2)\n\n        const date = new Date(dateShortenedFormatString)\n        // TODO use this date instead of today\n        // date.getTime() has been zeroed out\n        // TODO store date in state to used in nextDay and previousDay\n        //  functions.\n\n        const JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        const activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        console.log('LOADED activeHabitTemp: ', activeHabitTemp)\n\n        let habits = {}\n        if (activeHabitTemp) {\n            const JSONhabits = localStorage.getItem('habits_' + dateKeyString)\n            console.log('xxxhabits_' + dateKeyString, JSONhabits);\n\n            if (JSONhabits === null) {\n                //Create new habits\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    const startDateTime = new Date(activeHabitTemp[key].startDate).getTime()\n                    const endDateTime = new Date(activeHabitTemp[key].endDate).getTime()\n                    if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && date.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || date.getTime() <= endDateTime)\n                    ) {\n                        const habit = {}\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n                    return habits\n                }, {})\n            } else {\n                //Update old habits to include new/updated habits or old habits\n                const oldHabitsData = JSON.parse(JSONhabits)\n                console.log('yyy', oldHabitsData);\n\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    const startDateTime = new Date(activeHabitTemp[key].startDate).getTime()\n                    const endDateTime = new Date(activeHabitTemp[key].endDate).getTime()\n                    console.log('zzz', startDateTime)\n                    console.log('   ', endDateTime)\n                    if (!oldHabitsData[key]\n                        && activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && date.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || date.getTime() <= endDateTime)) {\n                        let habit = {}\n                        habit.progress = 0\n                        habits[key] = habit\n\n                        return habits\n                    } else if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && date.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || date.getTime() <= endDateTime)) {\n                        habits[key] = oldHabitsData[key]\n                    }\n\n                    return habits\n                }, {})\n            }\n        }\n\n        this.state = {\n            dayOfTheWeek: dayOfTheWeek,\n            dateKeyString: dateKeyString,\n            dateShortenedFormatString: dateShortenedFormatString,\n            activeHabitTemp: activeHabitTemp,\n            habits: habits,\n        }\n        console.log('CREATED Habit state: ', this.state)\n\n        // this.saveHabitLocalStorage()\n    }\n\n    saveHabitLocalStorage() {\n        const habitsJson = JSON.stringify(this.state.habits)\n        localStorage.setItem('habits_' + this.state.dateKeyString, habitsJson)\n\n        console.log('SAVED Habits', habitsJson);\n    }\n\n    incrementProgress(id) {\n        console.log(`---\\nCLICKED habits['${id}']`);\n\n        let habits = { ...this.state.habits }\n        let habit = habits[id]\n\n        habit.progress = habit.progress + 1\n\n        console.log('UPDATED incremented:', habits[id])\n        this.setState({\n            habits: habits\n        }, this.saveHabitLocalStorage.bind(this))\n    }\n\n    decrementProgress(id) {\n        console.log(`---\\nCLICKED habits['${id}']`);\n\n        let habits = { ...this.state.habits }\n        let habit = habits[id]\n\n        habit.progress = habit.progress - 1\n\n        console.log('UPDATED decremented:', habits[id])\n        this.setState({\n            habits: habits\n        }, this.saveHabitLocalStorage.bind(this))\n    }\n\n    previousDay() {\n        const date = new Date(this.state.dateShortenedFormatString)\n        const previousDate = new Date(date.getTime() - 86400000)\n        console.log(date)\n        console.log(previousDate)\n\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const dayOfTheWeek = daysOfTheWeeks[previousDate.getDay()]\n\n        const monthStr = (previousDate.getMonth() + 1).toString()\n        const dayStr = previousDate.getDate().toString()\n        const dateKeyString = previousDate.getFullYear() + '_'\n            + addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '_'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n\n        const dateShortenedFormatString = addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '/'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n            + '/'\n            + previousDate.getFullYear().toString().substring(2)\n\n\n        const activeHabitTemp = this.state.activeHabitTemp\n\n        let habits = {}\n        if (activeHabitTemp) {\n            const JSONhabits = localStorage.getItem('habits_' + dateKeyString)\n            console.log('xxxhabits_' + dateKeyString, JSONhabits);\n\n            if (JSONhabits === null) {\n                //Create new habits\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    const startDateTime = new Date(activeHabitTemp[key].startDate).getTime()\n                    const endDateTime = new Date(activeHabitTemp[key].endDate).getTime()\n                    if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && previousDate.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || previousDate.getTime() <= endDateTime)\n                    ) {\n                        const habit = {}\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n                    return habits\n                }, {})\n            } else {\n                //Update old habits to include new/updated habits or old habits\n                const oldHabitsData = JSON.parse(JSONhabits)\n                console.log('yyy', oldHabitsData);\n\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    const startDateTime = new Date(activeHabitTemp[key].startDate).getTime()\n                    const endDateTime = new Date(activeHabitTemp[key].endDate).getTime()\n                    console.log('zzz', startDateTime)\n                    console.log('   ', endDateTime)\n                    if (!oldHabitsData[key]\n                        && activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && previousDate.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || previousDate.getTime() <= endDateTime)) {\n                        let habit = {}\n                        habit.progress = 0\n                        habits[key] = habit\n\n                        return habits\n                    } else if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && previousDate.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || previousDate.getTime() <= endDateTime)) {\n                        habits[key] = oldHabitsData[key]\n                    }\n\n                    return habits\n                }, {})\n            }\n        }\n\n        this.setState(\n            {\n                dayOfTheWeek: dayOfTheWeek,\n                dateKeyString: dateKeyString,\n                dateShortenedFormatString: dateShortenedFormatString,\n                habits: habits,\n            }\n        )\n    }\n\n    nextDay() {\n        const date = new Date(this.state.dateShortenedFormatString)\n        const nextDate = new Date(date.getTime() + 86400000)\n        console.log(date)\n        console.log(nextDate)\n\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const dayOfTheWeek = daysOfTheWeeks[nextDate.getDay()]\n\n        const monthStr = (nextDate.getMonth() + 1).toString()\n        const dayStr = nextDate.getDate().toString()\n        const dateKeyString = nextDate.getFullYear() + '_'\n            + addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '_'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n\n        const dateShortenedFormatString = addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '/'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n            + '/'\n            + nextDate.getFullYear().toString().substring(2)\n\n\n        const activeHabitTemp = this.state.activeHabitTemp\n\n        let habits = {}\n        if (activeHabitTemp) {\n            const JSONhabits = localStorage.getItem('habits_' + dateKeyString)\n            console.log('xxxhabits_' + dateKeyString, JSONhabits);\n\n            if (JSONhabits === null) {\n                //Create new habits\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    const startDateTime = new Date(activeHabitTemp[key].startDate).getTime()\n                    const endDateTime = new Date(activeHabitTemp[key].endDate).getTime()\n                    if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && nextDate.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || nextDate.getTime() <= endDateTime)\n                    ) {\n                        const habit = {}\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n                    return habits\n                }, {})\n            } else {\n                //Update old habits to include new/updated habits or old habits\n                const oldHabitsData = JSON.parse(JSONhabits)\n                console.log('yyy', oldHabitsData);\n\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    const startDateTime = new Date(activeHabitTemp[key].startDate).getTime()\n                    const endDateTime = new Date(activeHabitTemp[key].endDate).getTime()\n                    console.log('zzz', startDateTime)\n                    console.log('   ', endDateTime)\n                    if (!oldHabitsData[key]\n                        && activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && nextDate.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || nextDate.getTime() <= endDateTime)) {\n                        let habit = {}\n                        habit.progress = 0\n                        habits[key] = habit\n\n                        return habits\n                    } else if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]\n                        && nextDate.getTime() >= startDateTime\n                        && (isNaN(endDateTime) || nextDate.getTime() <= endDateTime)) {\n                        habits[key] = oldHabitsData[key]\n                    }\n\n                    return habits\n                }, {})\n            }\n        }\n\n        this.setState(\n            {\n                dayOfTheWeek: dayOfTheWeek,\n                dateKeyString: dateKeyString,\n                dateShortenedFormatString: dateShortenedFormatString,\n                habits: habits,\n            }\n        )\n    }\n\n    render() {\n        const activeHabitTemp = this.state.activeHabitTemp\n        const habits = this.state.habits\n\n        const habitsEleMap = Object.keys(habits).map((key, i) => {\n            return (\n                <li className=\"pt1 pb1\" key={key}>\n                    <ProgressBar\n                        name={activeHabitTemp[key].name}\n                        dailyOccurrence={activeHabitTemp[key].dailyOccurrence}\n                        progress={habits[key].progress}\n                        onClick={event => this.incrementProgress(key)}\n                        onClickDecrement={event => this.decrementProgress(key)} />\n                </li>\n            )\n        })\n\n        let message = habitsEleMap.length === 0 ?\n            (<p className=\"pl1\">\n                No Habits {this.state.dateShortenedFormatString} ! Maybe you might want to create a <Link to=\"/habit-tracker/habit-template\">Habit.</Link>\n            </p>)\n            : (<p className=\"pl1\">\n                Let's see what habits you have for {this.state.dateShortenedFormatString}!\n            </p>)\n\n        const showToday = new Date(this.state.dateShortenedFormatString).toDateString() === new Date().toDateString() \n                            ?\n                            'Today' \n                            : this.state.dateShortenedFormatString\n\n        return (\n            <main className=\"grid-wrapper\">\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                <div className=\"pb5\">\n\n                    <div className=\"day-changer mt05\">\n                        <button className=\"day-changer-button\" onClick={event => this.previousDay()}>&larr;</button>\n                            <div className=\"day-changer-text\"> {showToday} </div>\n                        <button className=\"day-changer-button\" onClick={event => this.nextDay()}>&rarr;</button>\n                    </div>\n\n                    <h2>Schedule:</h2>\n                    <span className=\"pl1\">\n                        <b>Day of the Week:</b> {this.state.dayOfTheWeek}\n                    </span>\n                    {message}\n                    <ul>\n                        {habitsEleMap}\n                    </ul>\n                </div>\n\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </main>\n        )\n    }\n}\n\nexport default Habits","import { Component } from \"react\"\n\nclass SaveButton extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            savingMessage: '',\n        }\n    }\n\n    setSaveMessages() {\n\n        this.setState({\n            savingMessage: 'Saving...'\n        }, () => {\n            setTimeout(\n                () => {\n                    this.props.endOfSaveFunction()\n                }\n                , 1000)\n        })\n    }\n\n    render() {\n        let saveButton = (<button className={this.props.className} \n                                  onClick={event => {\n                                    this.setSaveMessages()\n                                    this.props.onClick(event)\n                            }}>Save</button>)\n        if (this.state.savingMessage === 'Saving...') {\n            saveButton = (<button className={this.props.classNameSaving}>Save</button>)\n        }\n\n        return (\n            <div>\n                {saveButton}\n                <span className=\"save-message\">{this.state.savingMessage}</span>\n            </div>\n        )\n    }\n}\n\nexport default SaveButton;","function WeekInput(props) {\n\n    return (\n        <div>\n            <b>Weekly Occurence:</b> <span className=\"require-star\">*</span>\n            <div className=\"checkboxes-container\">\n                <label className=\"checkbox-container\" htmlFor=\"mondayId\">\n                    <input type=\"checkbox\"\n                        id=\"mondayId\"\n                        name=\"weeklyOccurrence.Monday\"\n                        checked={props.Monday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Monday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"tuesdayId\">\n                    <input type=\"checkbox\"\n                        id=\"tuesdayId\"\n                        name=\"weeklyOccurrence.Tuesday\"\n                        checked={props.Tuesday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Tuesday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"wednesdayId\">\n                    <input type=\"checkbox\"\n                        id=\"wednesdayId\"\n                        name=\"weeklyOccurrence.Wednesday\"\n                        checked={props.Wednesday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Wednesday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"thursdayId\">\n                    <input type=\"checkbox\"\n                        id=\"thursdayId\"\n                        name=\"weeklyOccurrence.Thursday\"\n                        checked={props.Thursday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Thursday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"fridayId\">\n                    <input type=\"checkbox\"\n                        id=\"fridayId\"\n                        name=\"weeklyOccurrence.Friday\"\n                        checked={props.Friday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Friday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"saturdayId\">\n                    <input type=\"checkbox\"\n                        id=\"saturdayId\"\n                        name=\"weeklyOccurrence.Saturday\"\n                        checked={props.Saturday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Saturday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"sundayId\">\n                    <input type=\"checkbox\"\n                        id=\"sundayId\"\n                        name=\"weeklyOccurrence.Sunday\"\n                        checked={props.Sunday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Sunday</span>\n                </label>\n            </div>\n        </div >\n    );\n}\n\nexport default WeekInput;","function FormErrors(props) {\n\n    return props.showMessage && (           \n        <div className=\"mt1 pl1 pr1\">\n            <span className=\"form-error-message\">{props.message}</span>\n        </div>\n    )\n}\n\nexport default FormErrors","import { Component } from \"react\";\nimport SaveButton from \"./SaveButton\";\nimport WeekInput from \"./WeekInput\";\nimport FormErrors from \"./FormErrors\";\nconst { setNestedVal, generateUIDKey, addPrefix, isDate } = require('./helperModule.js');\n\nclass HabitTemplate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const today = new Date()\n        const monthStr = (today.getMonth() + 1).toString()\n        const dateStr = today.getDate().toString()\n\n        this.state = {\n            name: '',\n            dailyOccurrence: 1,\n            weeklyOccurrence: {\n                Monday: false,\n                Tuesday: false,\n                Wednesday: false,\n                Thursday: false,\n                Friday: false,\n                Saturday: false,\n                Sunday: false\n            },\n            startDate: addPrefix(() => monthStr.length > 1, monthStr, '0')\n                + '/' + addPrefix(() => dateStr.length > 1, dateStr, '0')\n                + '/' + new Date().getFullYear().toString(),\n            valid_startDate: true,\n            endDate: '',\n            valid_endDate: false,\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n\n        const name = target.name\n\n        const copyState = { ...this.state }\n        const propArr = name.split('.')\n        setNestedVal(copyState, propArr, value)\n        this.setState(copyState)\n    }\n\n    handleDateChange(event) {\n        let value = event.target.value\n        const name = event.target.name\n        const validFieldName = 'valid_' + name\n\n        this.setState({\n            [name]: value,\n            [validFieldName]: isDate(value)\n        })\n    }\n\n    saveStateToLocalStorage() {\n        let JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        if (!JSONactiveHabitTemp) {\n            JSONactiveHabitTemp = JSON.stringify({});\n            localStorage.setItem('activeHabitTemplates', JSONactiveHabitTemp)\n        }\n\n        let activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        const uid = generateUIDKey(activeHabitTemp)\n\n        //Convert dailyOccurrence from string to int\n        //then save to localStorage\n        this.setState({\n            dailyOccurrence: parseInt(this.state.dailyOccurrence)\n        }, () => {\n            activeHabitTemp[uid] = this.state\n            localStorage.setItem('activeHabitTemplates', JSON.stringify(activeHabitTemp))\n        })\n    }\n\n    setEmptyState() {\n        console.log('BEFORE Set Empty State: ', this.state);\n\n        const today = new Date()\n        const monthStr = (today.getMonth() + 1).toString()\n        const dateStr = today.getDate().toString()\n\n        this.setState({\n            name: '',\n            dailyOccurrence: 1,\n            weeklyOccurrence: {\n                Monday: false,\n                Tuesday: false,\n                Wednesday: false,\n                Thursday: false,\n                Friday: false,\n                Saturday: false,\n                Sunday: false\n            },\n            startDate: addPrefix(() => monthStr.length > 1, monthStr, '0')\n                + '/' + addPrefix(() => dateStr.length > 1, dateStr, '0')\n                + '/' + new Date().getFullYear().toString(),\n            valid_startDate: true,\n            endDate: '',\n            valid_endDate: false,\n        })\n    }\n\n    render() {\n\n        let showMessageOrSaveButton = (\n            <div className=\"validation-text-container\">\n                <div className=\"validation-text\">Please Fill in All Required (*) Fields.</div>\n            </div>\n        )\n\n        const weekdayChecked = Object.values(this.state.weeklyOccurrence).includes(true)\n        if (this.state.name !== '' \n            && weekdayChecked \n            && this.state.dailyOccurrence !== ''\n            && this.state.dailyOccurrence >= 1\n            && this.state.startDate !== ''\n            && this.state.valid_startDate \n            && (this.state.valid_endDate \n                || this.state.endDate === '')\n            ) {\n\n            showMessageOrSaveButton = (\n                <SaveButton className=\"save-button save-button-add\"\n                            classNameSaving=\"save-button save-button-add save-button-saving\"\n                            onClick={event => this.saveStateToLocalStorage()}\n                            endOfSaveFunction={event => this.setEmptyState()} />\n            )\n\n        }\n\n        return (\n            <main className=\"grid-wrapper\" >\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                <div className=\"pb5\" >\n                    <h2>Add a Habit:</h2>\n\n                    <div className=\"pl1 pr1\">\n                        <label htmlFor=\"habitNameId\">\n                            <b>Name:</b> <span className=\"require-star\">*</span>\n                            <input type=\"text\"\n                                id=\"habitNameId\"\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={(event) => this.handleInputChange(event)}\n                            />\n                        </label>\n                    </div>\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <WeekInput {...this.state.weeklyOccurrence} onChange={(event) => this.handleInputChange(event)} />\n                    </div>\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"dailyOccurrenceId\">\n                            <b>Daily Occurrence:</b> <span className=\"require-star\">*</span>\n                            <input type=\"number\"\n                                id=\"dailyOccurrenceId\"\n                                name=\"dailyOccurrence\"\n                                value={this.state.dailyOccurrence}\n                                onChange={(event) => this.handleInputChange(event)}\n                            />\n                        </label>\n                    </div>\n                    <FormErrors showMessage={this.state.dailyOccurrence < 1} message=\"Please Enter a Value 1 or Greater!\" />\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"startDateId\">\n                            <b>Start Date:</b> <span className=\"require-star\">*</span>\n                            <input type=\"text\"\n                                id=\"startDateId\"\n                                name=\"startDate\"\n                                value={this.state.startDate}\n                                onChange={(event) => this.handleDateChange(event)}\n                                placeholder=\"MM/DD/YYYY\"\n                            />\n                        </label>\n                    </div>\n                    <FormErrors showMessage={!this.state.valid_startDate} message=\"Please Enter a Valid Date MM/DD/YYYY\" />\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"endDateId\">\n                            <b>End Date: (optional)</b>\n                            <input type=\"text\"\n                                id=\"endDateId\"\n                                name=\"endDate\"\n                                value={this.state.endDate}\n                                onChange={(event) => this.handleDateChange(event)}\n                                placeholder=\"MM/DD/YYYY\"\n                            />\n                        </label>\n                    </div>\n                    <FormErrors showMessage={!this.state.valid_endDate && this.state.endDate !== ''} message=\"Please Enter a Valid Date MM/DD/YYYY or Keep Empty\" />\n                    <FormErrors showMessage={Date.parse(this.state.startDate) >= Date.parse(this.state.endDate)} message=\"Please Enter a Date Greater than the Start Date\" />\n\n                    <div className=\"button-container\">\n                        {showMessageOrSaveButton}\n                    </div>\n                </div>\n\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </main >\n        )\n    }\n}\n\nexport default HabitTemplate;","import { Component } from \"react\"\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport WeekInput from \"./WeekInput\";\nimport FormErrors from \"./FormErrors\";\nimport SaveButton from \"./SaveButton\";\nconst { setNestedVal, addPrefix, isDate, dot } = require('./helperModule.js');\n\nfunction NavigatationSaveButton(props) {\n    const navigate = useNavigate()\n\n    return (\n        <SaveButton className=\"save-button save-button-edit\"\n            classNameSaving=\"save-button save-button-edit save-button-saving\"\n            onClick={event => props.onClick()}\n            endOfSaveFunction={event => navigate(\"/habit-tracker/habit-templates\")} />\n    );\n}\n\nfunction NavigatationCancelButton(props) {\n    const navigate = useNavigate()\n\n    return (\n        <button className=\"cancel-button\" onClick={event => navigate(\"/habit-tracker/habit-templates\")}>\n            Cancel\n        </button>\n    );\n}\n\nclass HabitTemplateEdit extends Component {\n\n    constructor(props) {\n        super(props)\n\n        //TODO see if it is possible to do this with the useParams function\n        //https://medium.com/geekculture/how-to-use-react-router-useparams-436851fd5ef6\n        const habitId = window.location.pathname.slice(-16)\n        const habit = JSON.parse(localStorage.getItem('activeHabitTemplates'))[habitId]\n\n        console.log('habit: ', habit)\n\n        const today = new Date()\n        const monthStr = (today.getMonth() + 1).toString()\n        const dateStr = today.getDate().toString()\n\n        this.state = {\n            habitId: habitId,\n            habitExists: habit ? true : false,\n            name: dot('', habit, 'name'),\n            dailyOccurrence: dot(1, habit, 'dailyOccurrence'),\n            weeklyOccurrence: {\n                Monday: dot(false, habit, 'weeklyOccurrence', 'Monday'),\n                Tuesday: dot(false, habit, 'weeklyOccurrence', 'Tuesday'),\n                Wednesday: dot(false, habit, 'weeklyOccurrence', 'Wednesday'),\n                Thursday: dot(false, habit, 'weeklyOccurrence', 'Thursday'),\n                Friday: dot(false, habit, 'weeklyOccurrence', 'Friday'),\n                Saturday: dot(false, habit, 'weeklyOccurrence', 'Saturday'),\n                Sunday: dot(false, habit, 'weeklyOccurrence', 'Sunday')\n            },\n            startDate: dot(\n                addPrefix(() => monthStr.length > 1, monthStr, '0')\n                + '/' + addPrefix(() => dateStr.length > 1, dateStr, '0')\n                + '/' + new Date().getFullYear().toString()\n                , habit, 'startDate'),\n            valid_startDate: dot(true, habit, 'valid_startDate'),\n            endDate: dot('', habit, 'endDate'),\n            valid_endDate: dot(false, habit, 'valid_endDate'),\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n\n        const name = target.name\n\n        const copyState = { ...this.state }\n        const propArr = name.split('.')\n        setNestedVal(copyState, propArr, value)\n        this.setState(copyState)\n    }\n\n    handleDateChange(event) {\n        let value = event.target.value\n        const name = event.target.name\n        const validFieldName = 'valid_' + name\n\n        this.setState({\n            [name]: value,\n            [validFieldName]: isDate(value)\n        })\n    }\n\n    saveStateToLocalStorage() {\n        const JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        const activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n\n        //Convert dailyOccurrence from string to int\n        //then save to localStorage\n        this.setState({\n            dailyOccurrence: parseInt(this.state.dailyOccurrence)\n        }, () => {\n            activeHabitTemp[this.state.habitId] = this.state\n            localStorage.setItem('activeHabitTemplates', JSON.stringify(activeHabitTemp))\n        })\n    }\n\n    render() {\n\n        let showSaveButton = (\n            <div className=\"validation-text-container\">\n                <div className=\"validation-text\">Please Fill in All Required (*) Fields.</div>\n            </div>\n        )\n\n        const weekdayChecked = Object.values(this.state.weeklyOccurrence).includes(true)\n        if (this.state.name !== ''\n            && weekdayChecked\n            && this.state.dailyOccurrence !== ''\n            && this.state.dailyOccurrence >= 1\n            && this.state.startDate !== ''\n            && this.state.valid_startDate\n            && (this.state.valid_endDate\n                || this.state.endDate === '') ) \n        {\n            showSaveButton = (\n                <NavigatationSaveButton onClick={event => this.saveStateToLocalStorage()} />\n            )\n        }\n\n        //if the habitId does not exist show message instead of rendering rest of page\n        let content = (<p>This Habit does not exist. You might want to go to the <Link to=\"/habit-tracker/habit-templates\">All My Habits</Link> page instead</p>)\n\n        if (this.state.habitExists) {\n            content = (\n                <div className=\"pb5\" >\n                    <h2>Edit Habit:</h2>\n\n                    <div className=\"pl1 pr1\">\n                        <label htmlFor=\"habitNameId\">\n                            <b>Name:</b> <span className=\"require-star\">*</span>\n                            <input type=\"text\"\n                                id=\"habitNameId\"\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={(event) => this.handleInputChange(event)}\n                            />\n                        </label>\n                    </div>\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <WeekInput {...this.state.weeklyOccurrence} onChange={(event) => this.handleInputChange(event)} />\n                    </div>\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"dailyOccurrenceId\">\n                            <b>Daily Occurrence:</b> <span className=\"require-star\">*</span>\n                            <input type=\"number\"\n                                id=\"dailyOccurrenceId\"\n                                name=\"dailyOccurrence\"\n                                value={this.state.dailyOccurrence}\n                                onChange={(event) => this.handleInputChange(event)}\n                            />\n                        </label>\n                    </div>\n                    <FormErrors showMessage={this.state.dailyOccurrence < 1} message=\"Please Enter a Value 1 or Greater!\" />\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"startDateId\">\n                            <b>Start Date:</b> <span className=\"require-star\">*</span>\n                            <input type=\"text\"\n                                id=\"startDateId\"\n                                name=\"startDate\"\n                                value={this.state.startDate}\n                                onChange={(event) => this.handleDateChange(event)}\n                                placeholder=\"MM/DD/YYYY\"\n                            />\n                        </label>\n                    </div>\n                    <FormErrors showMessage={!this.state.valid_startDate} message=\"Please Enter a Valid Date MM/DD/YYYY\" />\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"endDateId\">\n                            <b>End Date: (optional)</b>\n                            <input type=\"text\"\n                                id=\"endDateId\"\n                                name=\"endDate\"\n                                value={this.state.endDate}\n                                onChange={(event) => this.handleDateChange(event)}\n                                placeholder=\"MM/DD/YYYY\"\n                            />\n                        </label>\n                    </div>\n                    <FormErrors showMessage={!this.state.valid_endDate && this.state.endDate !== ''} message=\"Please Enter a Valid Date MM/DD/YYYY or Keep Empty\" />\n                    <FormErrors showMessage={Date.parse(this.state.startDate) >= Date.parse(this.state.endDate)} message=\"Please Enter a Date Greater than the Start Date\" />\n\n                    <div className=\"button-container\">\n                        <NavigatationCancelButton />\n                        {showSaveButton}\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <main className=\"grid-wrapper\" >\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n                {content}\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </main >\n        )\n    }\n}\n\nexport default HabitTemplateEdit;","import React, { Component } from 'react'\nimport { useNavigate, Link } from \"react-router-dom\";\n\nfunction EditButton(props) {\n    const navigate = useNavigate()\n\n    return (\n        <button className=\"edit-button\"\n            type=\"button\"\n            id={props.id}\n            onClick={() => {\n                navigate(\"/habit-tracker/habit-template-edit-\" + props.id)\n            }} >\n            Edit\n        </button>\n    )\n}\n\nfunction Day(props) {\n    return <div className=\"inline-block mr1\" key={props.keyVal}>\n        {props.day}\n    </div>\n}\n\nclass HabitTemplates extends Component {\n    constructor(props) {\n        super(props);\n\n        let JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        let activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n\n        // TODO if user navigates to this page without \n        // any activeHabitTemplates inactiveHabitTemplates being made then\n        // suggest user goto HabitTemplate page.\n\n        // TODO add inactiveHabitTemp\n        // let JSONinactiveHabitTemp = localStorage.getItem('inactiveHabitTemplates')\n        // let inactiveHabitTemp = JSON.parse(JSONinactiveHabitTemp)\n\n        this.state = {\n            activeHabitTemp: activeHabitTemp ?? []\n            // inactiveHabitTemp: inactiveHabitTemp  \n        }\n        console.log('CREATED HabitTemplates state: ', this.state);\n    }\n\n    saveToLocalStorage(habitTempString) {\n        console.log('saveToLocalStorage ' + habitTempString);\n        let JSONHabitTemp = JSON.stringify(this.state[habitTempString])\n        localStorage.setItem('activeHabitTemplates', JSONHabitTemp)\n    }\n\n    handleRemove(id, habitTempString) {\n        let habitTemps = { ...this.state[habitTempString] }\n\n        console.log('handleRemove for ' + habitTempString, ' ID: ' + id)\n        console.log('BEFORE DELETE state ', this.state[habitTempString])\n        delete habitTemps[id]\n\n        if (habitTempString === 'activeHabitTemp') {\n            this.setState({\n                activeHabitTemp: habitTemps\n            }, this.saveToLocalStorage.bind(this, 'activeHabitTemp'))\n        }\n        // if(habitTempString === 'inactiveHabitTemp') {\n        //     this.setState({\n        //         inactiveHabitTemp: habitTemps\n        //     }, this.saveToLocalStorage.bind(this))\n        // }\n    }\n\n    render() {\n        const activeHabitTemp = this.state.activeHabitTemp\n        // const inactiveHabitTemp = this.state.inactiveHabitTemp\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n        let message = activeHabitTemp.length === 0 ?\n            (<p className=\"\">\n                You have no Habits! Maybe you might want to create a <Link to=\"/habit-tracker/habit-template\">Habit.</Link>\n            </p>)\n            :\n            (<p className=\"\">\n                View all my Habits.\n            </p>)\n\n        let activeHabitTempList = Object.keys(activeHabitTemp).map(\n            (key) =>\n                <li className=\"mb1\" key={key}>\n                    <div className=\"mb1\">\n                        <b>{activeHabitTemp[key].name}: </b>\n                        <span>{activeHabitTemp[key].dailyOccurrence}x</span>\n                    </div>\n                    <div className=\"pl1\">\n                        <div className=\"mb1\">\n                            {\n                                daysOfTheWeeks.reduce((acc, day, i) => {\n                                    if (activeHabitTemp[key].weeklyOccurrence[day])\n                                        acc.push(<Day key={i} day={day} />)\n\n                                    return acc\n                                }, [])\n                            }\n                        </div>\n                        <div className=\"habit-button-container\">\n                            <button className=\"remove-button\" type=\"button\" onClick={() => this.handleRemove(key, 'activeHabitTemp')}>\n                                Remove\n                            </button>\n                            <EditButton id={key} />\n                        </div>\n                    </div>\n                </li>\n        )\n\n        // let inactiveHabits = props.habits.filter(habit => !habit.active)\n        // let inactiveHabitNames = inactiveHabits.map(habit => <li>{habit.name}</li>)\n\n        return (\n            <div className=\"grid-wrapper\">\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                <div className=\"pb5\">\n                    <h2>All My Habits:</h2>\n\n                    <div className=\"pl1\">\n                        {message}\n                        {/* <h4>Habits:</h4> */}\n                        <ul>\n                            {activeHabitTempList}\n                        </ul>\n                    </div>\n\n\n                    {/* <h4>Inactive Habits:</h4>\n                <ul>\n                    {inactiveHabitNames}\n                </ul> */}\n\n                    {/* TODO Add a clickable button to edit page in the HabitTemplate.js page\n                you will have to make sure that when editing the entry and saving it is not creating\n                a new entry\n\n                TODO Also add a way to delete an entry on the page. Or move it to the inactiveHabits list */}\n                </div>\n\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </div>\n        )\n    }\n\n}\n\nexport default HabitTemplates;","import { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport Habits from './Habits';\nimport HabitTemplate from './HabitTemplate';\nimport HabitTemplateEdit from './HabitTemplateEdit';\nimport HabitTemplates from './HabitTemplates';\n\nimport './index.css'\n\n// function ProfilePage() {\n//   // Get the userId param from the URL.\n//   let { habitId } = useParams();\n// }\n\nconst rootElement = document.getElementById(\"root\");\nlet direct = 'habits';\nif (sessionStorage.getItem('location')) {\n  direct = sessionStorage.getItem('location')\n  sessionStorage.removeItem('location')\n}\nrender(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/habit-tracker/\" element={<App />}>\n        {/* Traffic is being directed here, based on sessionStorage 'locations' value. \n            Which is set in 404.html page.*/}\n        <Route path=\"/habit-tracker/\" element={<Navigate to={'/habit-tracker/' + direct} />} />\n        <Route path=\"habits\" element={<Habits />} />\n        <Route path=\"habit-template\" element={<HabitTemplate />} />\n        <Route path=\"habit-template-edit-:habitId\" element={<HabitTemplateEdit />} />\n        <Route path=\"habit-templates\" element={<HabitTemplates />} />\n        <Route\n          path=\"*\"\n          element={\n            <main className=\"grid-wrapper\">\n              <div></div>{/* Used for sides in grid. Needed to work properly. */}\n              <p>\n                Sorry you have navigated to a page that does not exist.\n                Try going to the <Link to=\"/habit-tracker/habits\">Schedule</Link> page instead.\n              </p>\n              <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </main>\n          }\n        />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n);"],"sourceRoot":""}