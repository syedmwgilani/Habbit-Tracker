{"version":3,"sources":["helperModule.js","App.js","Habits.js","SaveButton.js","WeekInput.js","HabitTemplate.js","HabitTemplateEdit.js","HabitTemplates.js","index.js"],"names":["module","exports","getNestedVal","obj","propArr","reduce","innerObj","prop","level","getInnerObj","propLessOneLev","slice","length","this","setNestedVal","value","arr","generateUIDKey","ranNumStr","Math","floor","random","toString","addPrefix","condition","sting","prefix","objectIsEmpty","Object","keys","dot","defaultVal","returnDefault","args","acc","cur","App","className","to","href","title","target","rel","require","InnerBar","props","progPercent","round","progress","dailyOccurrence","innerBar","width","style","name","ProgressBar","star","onClick","onClickDecrement","Habits","today","Date","dayOfTheWeek","getDay","monthStr","getMonth","dayStr","getDate","dateKeyString","getFullYear","dateFormattedString","substr","JSONactiveHabitTemp","localStorage","getItem","activeHabitTemp","JSON","parse","console","log","habits","JSONhabits","key","weeklyOccurrence","habit","oldHabitsData","state","saveHabitLocalStorage","habitsJson","stringify","setItem","id","setState","bind","habitsEleMap","map","i","event","incrementProgress","decrementProgress","message","Component","SaveButton","savingMessage","setTimeout","endOfSaveFunction","saveButton","setSaveMessages","classNameSaving","WeekInput","htmlFor","type","checked","Monday","onChange","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","HabitTemplate","copyState","split","uid","parseInt","showSaveButton","weekdayChecked","values","includes","saveStateToLocalStorage","setEmptyState","handleInputChange","NavigatationSaveButton","navigate","useNavigate","NavigatationCancelButton","HabitTemplateEdit","habitId","window","location","pathname","content","EditButton","Day","day","keyVal","HabitTemplates","habitTempString","JSONHabitTemp","habitTemps","saveToLocalStorage","daysOfTheWeeks","activeHabitTempList","push","handleRemove","rootElement","document","getElementById","direct","sessionStorage","removeItem","render","path","element","padding","textAlign"],"mappings":"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","file":"static/js/main.a21f9519.chunk.js","sourcesContent":["module.exports = {\n    getNestedVal: function (obj, propArr) {\n        return propArr.reduce((innerObj, prop, level) => {\n            return innerObj[prop]\n        }, obj);\n    },\n\n\n    getInnerObj: function (obj, propArr) {\n        const propLessOneLev = propArr.slice(0, propArr.length - 1)\n        return this.getNestedVal(obj, propLessOneLev)\n    },\n\n    setNestedVal: function (obj, propArr, value) {\n        return propArr.reduce((innerObj, prop, level, arr) => {\n            if (level === arr.length - 1) {\n                innerObj[prop] = value;\n                return innerObj;\n            }\n\n            return innerObj[prop]\n        }, obj);\n    },\n\n    //obj - check object keys to see if id exists\n    generateUIDKey: function (obj) {\n        let ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        while(obj[ranNumStr]) {\n            ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        }\n        return ranNumStr;\n    },\n\n    addPrefix: function (condition, sting, prefix) {\n        return condition() ? sting : prefix + sting\n    },\n\n    objectIsEmpty: function (obj) {\n        return Object.keys(obj).length === 0;\n    },\n\n    // Used to traverse an object and its potential properties.\n    // If property in list is not found then defaultVal is returned.\n    // ex: dot(false, props, 'weeklyOccurrence', 'wednesday')\n    dot: function (defaultVal, ...args) {\n        let returnDefault = false;\n    \n        return args.reduce( function(acc, cur) {\n            if(returnDefault)\n                return defaultVal;\n            if(typeof(acc[cur]) === 'undefined' || acc[cur] === null) {\n                returnDefault = true;\n                return defaultVal;\n            }\n            return acc[cur];\n        })\n    },\n}","import { Outlet, Link } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Habit Tracker</h1>\n      </header>\n\n      <nav>\n        <Link className=\"tab\" to=\"/habit-tracker/habits\">Schedule</Link>\n        <Link className=\"tab\" to=\"/habit-tracker/habit-template\">Add A Habit</Link>\n        <Link className=\"tab\" to=\"/habit-tracker/habit-templates\">All My Habits</Link>\n      </nav>\n\n      <Outlet />\n\n      <footer>\n        <span>Explore more projects made by me on <a href=\"https://github.com/syedmwgilani\" title=\"github\" target=\"_blank\" rel=\"noreferrer\">Github</a>.</span>\n      </footer>\n    </div>\n  );\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nconst { addPrefix } = require('./helperModule.js')\n\n\nfunction InnerBar(props) {\n    const progPercent = Math.round(props.progress / props.dailyOccurrence * 100)\n    const barSize = progPercent < 100 ? progPercent : 100\n\n    const innerBar = {\n        width: barSize + '%',\n    }\n\n    return (\n        <div className=\"inner-bar\" style={innerBar}>\n            <span className=\"inner-bar-text-left\">+</span>\n            <span className=\"inner-bar-text-center\">{props.name}</span>\n            <span className=\"inner-bar-text-right\">{props.progress} / {props.dailyOccurrence}</span>\n        </div>\n    )\n}\n\nfunction ProgressBar(props) {\n    const star = props.progress >= props.dailyOccurrence ? <span className=\"icon-star-full\"></span> : <span></span>\n\n    return (\n        <div>\n            <div className=\"star-container\">\n                <div className=\"star-inner-content\">\n                    {star}\n                </div>\n            </div>\n            <div className=\"progress-bar\" onClick={props.onClick}>\n                <InnerBar progress={props.progress}\n                    name={props.name}\n                    dailyOccurrence={props.dailyOccurrence} />\n            </div>\n            <div className=\"decrement-button ml1\" onClick={props.onClickDecrement}>\n                <div className=\"decrement-inner-button\">\n                    <span className=\"decrement-inner-button-content\">-</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nclass Habits extends Component {\n    constructor(props) {\n        super(props)\n\n        const today = new Date()\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const dayOfTheWeek = daysOfTheWeeks[today.getDay()]\n\n        const monthStr = (today.getMonth() + 1).toString()\n        const dayStr = today.getDate().toString()\n        const dateKeyString = today.getFullYear() + '_'\n            + addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '_'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n\n        const dateFormattedString = addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '/'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n            + '/'\n            + today.getFullYear().toString().substr(-2)\n\n        const JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        const activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        console.log('LOADED activeHabitTemp: ', activeHabitTemp)\n\n        let habits = {}\n        if (activeHabitTemp) {\n            const JSONhabits = localStorage.getItem('habits_' + dateKeyString)\n\n            if (JSONhabits === null) {\n                //Create new habits obj\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        const habit = {}\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n                    return habits\n                }, {})\n            } else {\n                //Update old habits obj\n                const oldHabitsData = JSON.parse(JSONhabits)\n\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n\n                    let habit = oldHabitsData[key]\n\n                    if (habit && activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n\n                        habits[key] = habit\n                        return habits\n                    } else if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        habit = {}\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n\n                    return habits\n                }, {})\n            }\n        }\n\n        this.state = {\n            dayOfTheWeek: dayOfTheWeek,\n            dateKeyString: dateKeyString,\n            dateFormattedString: dateFormattedString,\n            habits: habits,\n        }\n        console.log('CREATED Habit state: ', this.state)\n\n        this.saveHabitLocalStorage()\n    }\n\n    saveHabitLocalStorage() {\n        const habitsJson = JSON.stringify(this.state.habits)\n        localStorage.setItem('habits_' + this.state.dateKeyString, habitsJson)\n\n        console.log('SAVED Habits', habitsJson);\n    }\n\n    incrementProgress(id) {\n        console.log(`---\\nCLICKED habits['${id}']`);\n\n        let habits = { ...this.state.habits }\n        let habit = habits[id]\n\n        habit.progress = habit.progress + 1\n\n        console.log('UPDATED incremented:', habits[id])\n        this.setState({\n            habits: habits\n        }, this.saveHabitLocalStorage.bind(this))\n    }\n\n    decrementProgress(id) {\n        console.log(`---\\nCLICKED habits['${id}']`);\n\n        let habits = { ...this.state.habits }\n        let habit = habits[id]\n\n        habit.progress = habit.progress - 1\n\n        console.log('UPDATED decremented:', habits[id])\n        this.setState({\n            habits: habits\n        }, this.saveHabitLocalStorage.bind(this))\n    }\n\n    render() {\n        const habits = this.state.habits\n        const habitsEleMap = Object.keys(habits).map((key, i) => {\n            return (\n                <li className=\"pt1 pb1\" key={key}>\n                    <ProgressBar {...habits[key]}\n                        onClick={event => this.incrementProgress(key)}\n                        onClickDecrement={event => this.decrementProgress(key)} />\n                </li>\n            )\n        })\n\n        let message = habitsEleMap.length === 0 ?\n            (<p className=\"pl1\">\n                No Habits {this.state.dateFormattedString} ! Maybe you might want to create a <Link to=\"/habit-tracker/habit-template\">Habit.</Link>\n            </p>)\n            : (<p className=\"pl1\">\n                Let's see what habits you have for {this.state.dateFormattedString} !\n            </p>)\n\n\n        return (\n            <main className=\"grid-wrapper\">\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                <div className=\"pb5\">\n                    <h2>Schedule:</h2>\n                    <span className=\"pl1\">\n                        <b>Today:</b> {this.state.dayOfTheWeek}\n                    </span>\n                    {message}\n                    <ul>\n                        {habitsEleMap}\n                    </ul>\n                </div>\n\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </main>\n        )\n    }\n}\n\nexport default Habits","import { Component } from \"react\"\n\nclass SaveButton extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            savingMessage: '',\n        }\n    }\n\n    setSaveMessages() {\n\n        this.setState({\n            savingMessage: 'Saving...'\n        }, () => {\n            setTimeout(\n                () => {\n                    this.props.endOfSaveFunction()\n                }\n                , 1000)\n        })\n    }\n\n    render() {\n        let saveButton = (<button className={this.props.className} \n                                  onClick={event => {\n                                    this.setSaveMessages()\n                                    this.props.onClick(event)\n                            }}>Save</button>)\n        if (this.state.savingMessage === 'Saving...') {\n            saveButton = (<button className={this.props.classNameSaving}>Save</button>)\n        }\n\n        return (\n            <div>\n                {saveButton}\n                <span className=\"save-message\">{this.state.savingMessage}</span>\n            </div>\n        )\n    }\n}\n\nexport default SaveButton;","function WeekInput(props) {\n\n    return (\n        <div>\n            <b>Weekly Occurence: </b>\n            <div className=\"checkboxes-container\">\n                <label className=\"checkbox-container\" htmlFor=\"mondayId\">\n                    <input type=\"checkbox\"\n                        id=\"mondayId\"\n                        name=\"weeklyOccurrence.Monday\"\n                        checked={props.Monday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Monday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"tuesdayId\">\n                    <input type=\"checkbox\"\n                        id=\"tuesdayId\"\n                        name=\"weeklyOccurrence.Tuesday\"\n                        checked={props.Tuesday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Tuesday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"wednesdayId\">\n                    <input type=\"checkbox\"\n                        id=\"wednesdayId\"\n                        name=\"weeklyOccurrence.Wednesday\"\n                        checked={props.Wednesday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Wednesday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"thursdayId\">\n                    <input type=\"checkbox\"\n                        id=\"thursdayId\"\n                        name=\"weeklyOccurrence.Thursday\"\n                        checked={props.Thursday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Thursday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"fridayId\">\n                    <input type=\"checkbox\"\n                        id=\"fridayId\"\n                        name=\"weeklyOccurrence.Friday\"\n                        checked={props.Friday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Friday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"saturdayId\">\n                    <input type=\"checkbox\"\n                        id=\"saturdayId\"\n                        name=\"weeklyOccurrence.Saturday\"\n                        checked={props.Saturday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Saturday</span>\n                </label>\n                <label className=\"checkbox-container\" htmlFor=\"sundayId\">\n                    <input type=\"checkbox\"\n                        id=\"sundayId\"\n                        name=\"weeklyOccurrence.Sunday\"\n                        checked={props.Sunday}\n                        onChange={(event) => props.onChange(event)}\n                    />\n                    <span>Sunday</span>\n                </label>\n            </div>\n        </div >\n    );\n}\n\nexport default WeekInput;","import { Component } from \"react\";\nimport SaveButton from \"./SaveButton\";\nimport WeekInput from \"./WeekInput\";\nconst { setNestedVal, generateUIDKey } = require('./helperModule.js');\n\nclass HabitTemplate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            dailyOccurrence: 1,\n            weeklyOccurrence: {\n                Monday: false,\n                Tuesday: false,\n                Wednesday: false,\n                Thursday: false,\n                Friday: false,\n                Saturday: false,\n                Sunday: false\n            },\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n\n        if (target.name === 'dailyOccurrence') {\n            value = value < 1 ? 1 : value\n        }\n\n        const name = target.name\n\n        const copyState = { ...this.state }\n        const propArr = name.split('.')\n        setNestedVal(copyState, propArr, value)\n        this.setState(copyState)\n    }\n\n    saveStateToLocalStorage() {\n        let JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        if (!JSONactiveHabitTemp) {\n            JSONactiveHabitTemp = JSON.stringify({});\n            localStorage.setItem('activeHabitTemplates', JSONactiveHabitTemp)\n        }\n\n        let activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        const uid = generateUIDKey(activeHabitTemp)\n\n        //Convert dailyOccurrence from string to int\n        //then save to localStorage\n        this.setState({\n            dailyOccurrence: parseInt(this.state.dailyOccurrence)\n        }, () => {\n            activeHabitTemp[uid] = this.state\n            localStorage.setItem('activeHabitTemplates', JSON.stringify(activeHabitTemp))\n        })\n    }\n\n    setEmptyState() {\n        console.log('BEFORE Set Empty State: ', this.state);\n        this.setState({\n            name: '',\n            dailyOccurrence: 1,\n            weeklyOccurrence: {\n                Monday: false,\n                Tuesday: false,\n                Wednesday: false,\n                Thursday: false,\n                Friday: false,\n                Saturday: false,\n                Sunday: false\n            },\n        })\n    }\n\n    render() {\n        let showSaveButton = (\n            <div className=\"validation-text-container\">\n                <div className=\"validation-text\">Please Enter a Habit <b>Name</b> and select at least <b>One</b> Weekday.</div>\n            </div>\n        )\n        const weekdayChecked = Object.values(this.state.weeklyOccurrence).includes(true)\n        if (this.state.name !== '' && weekdayChecked) {\n            showSaveButton = (\n                <SaveButton className=\"save-button save-button-add\"\n                            classNameSaving=\"save-button save-button-add save-button-saving\"\n                            onClick={event => this.saveStateToLocalStorage()}\n                            endOfSaveFunction={event => this.setEmptyState()} />\n            )\n        }\n\n        return (\n            <main className=\"grid-wrapper\" >\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                <div className=\"pb5\" >\n                    <h2>Add a Habit:</h2>\n\n                    <div className=\"pl1 pr1\">\n                        <label htmlFor=\"habitNameId\">\n                            <b>Name:</b>\n                            <input type=\"text\"\n                                id=\"habitNameId\"\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={(event) => this.handleInputChange(event)}\n                            />\n                        </label>\n                    </div>\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <WeekInput {...this.state.weeklyOccurrence} onChange={(event) => this.handleInputChange(event)} />\n                    </div>\n\n                    <div className=\"mt1 pl1 pr1\">\n                        <label htmlFor=\"dailyOccurrenceId\">\n                            <b>Daily Occurrence:</b>\n                            <input type=\"number\"\n                                id=\"dailyOccurrenceId\"\n                                name=\"dailyOccurrence\"\n                                value={this.state.dailyOccurrence}\n                                onChange={(event) => this.handleInputChange(event)}\n                            />\n                        </label>\n                    </div>\n\n                    <div className=\"button-container\">\n                        {showSaveButton}\n                    </div>\n                </div>\n\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </main >\n        )\n    }\n}\n\nexport default HabitTemplate;","import { Component } from \"react\"\nimport { useNavigate } from \"react-router\";\nimport WeekInput from \"./WeekInput\";\nimport SaveButton from \"./SaveButton\";\nconst { setNestedVal, dot } = require('./helperModule.js');\n\nfunction NavigatationSaveButton(props) {\n    const navigate = useNavigate()\n\n    return (\n        <SaveButton className=\"save-button save-button-edit\"\n                    classNameSaving=\"save-button save-button-edit save-button-saving\"\n                    onClick={event => props.onClick()}\n                    endOfSaveFunction={event => navigate(\"/habit-tracker/habit-templates\")} />\n    );\n}\n\nfunction NavigatationCancelButton(props) {\n    const navigate = useNavigate()\n\n    return (\n        <button className=\"cancel-button\" onClick={event => navigate(\"/habit-tracker/habit-templates\")}>\n            Cancel\n        </button>\n    );\n}\n\nclass HabitTemplateEdit extends Component {\n\n    constructor(props) {\n        super(props)\n\n        //TODO see if it is possible to do with useParams function\n        //https://medium.com/geekculture/how-to-use-react-router-useparams-436851fd5ef6\n        const habitId = window.location.pathname.slice(-16)\n        const habit = JSON.parse(localStorage.getItem('activeHabitTemplates'))[habitId]\n\n        console.log('habit: ', habit)\n\n        this.state = {\n            habitId: habitId,\n            name: dot('', habit, 'name'),\n            dailyOccurrence: dot(1, habit, 'dailyOccurrence'),\n            weeklyOccurrence: {\n                Monday: dot(false, habit, 'weeklyOccurrence', 'Monday'),\n                Tuesday: dot(false, habit, 'weeklyOccurrence', 'Tuesday'),\n                Wednesday: dot(false, habit, 'weeklyOccurrence', 'Wednesday'),\n                Thursday: dot(false, habit, 'weeklyOccurrence', 'Thursday'),\n                Friday: dot(false, habit, 'weeklyOccurrence', 'Friday'),\n                Saturday: dot(false, habit, 'weeklyOccurrence', 'Saturday'),\n                Sunday: dot(false, habit, 'weeklyOccurrence', 'Sunday')\n            },\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target\n        let value = target.type === 'checkbox' ? target.checked : target.value\n\n        if (target.name === 'dailyOccurrence') {\n            value = value < 1 ? 1 : value\n        }\n\n        const name = target.name\n\n        const copyState = { ...this.state }\n        const propArr = name.split('.')\n        setNestedVal(copyState, propArr, value)\n        this.setState(copyState)\n    }\n\n    saveStateToLocalStorage() {\n        const JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        const activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n\n        //Convert dailyOccurrence from string to int\n        //then save to localStorage\n        this.setState({\n            dailyOccurrence: parseInt(this.state.dailyOccurrence)\n        }, () => {\n            activeHabitTemp[this.state.habitId] = this.state\n            localStorage.setItem('activeHabitTemplates', JSON.stringify(activeHabitTemp))\n        })\n    }\n\n    render() {\n        let showSaveButton = (\n            <div className=\"validation-text-container\">\n                <div className=\"validation-text\">Please Enter a Habit <b>Name</b> and select at least <b>One</b> Weekday.</div>\n            </div>\n        )\n\n        const weekdayChecked = Object.values(this.state.weeklyOccurrence).includes(true)\n        if (this.state.name !== '' && weekdayChecked) {\n            showSaveButton = (\n                <NavigatationSaveButton onClick={event => this.saveStateToLocalStorage()} />\n            )\n        }\n\n        //if the habitId does not exist show message instead of rendering rest of page\n        let content = <span>This Habit does not exist. Maybe you might want to go to this page instead</span>\n\n        if (this.state.name !== '') {\n            content = (\n                <main className=\"grid-wrapper\" >\n                    <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                    <div className=\"pb5\" >\n                        <h2>Edit Habit:</h2>\n\n                        <div className=\"pl1 pr1\">\n                            <label htmlFor=\"habitNameId\">\n                                <b>Name:</b>\n                                <input type=\"text\"\n                                    id=\"habitNameId\"\n                                    name=\"name\"\n                                    value={this.state.name}\n                                    onChange={(event) => this.handleInputChange(event)}\n                                />\n                            </label>\n                        </div>\n\n                        <div className=\"mt1 pl1 pr1\">\n                            <WeekInput {...this.state.weeklyOccurrence} onChange={(event) => this.handleInputChange(event)} />\n                        </div>\n\n                        <div className=\"mt1 pl1 pr1\">\n                            <label htmlFor=\"dailyOccurrenceId\">\n                                <b>Daily Occurrence:</b>\n                                <input type=\"number\"\n                                    id=\"dailyOccurrenceId\"\n                                    name=\"dailyOccurrence\"\n                                    value={this.state.dailyOccurrence}\n                                    onChange={(event) => this.handleInputChange(event)}\n                                />\n                            </label>\n                        </div>\n                        <div className=\"button-container\">\n                            <NavigatationCancelButton />\n                            {showSaveButton}\n                        </div>\n                    </div>\n\n                    <div></div>{/* Used for sides in grid. Needed to work properly. */}\n                </main >\n            )\n        }\n\n        return content\n    }\n}\n\nexport default HabitTemplateEdit;","import React, { Component } from 'react'\nimport { useNavigate, Link } from \"react-router-dom\";\n\nfunction EditButton(props) {\n    const navigate = useNavigate()\n\n    return (\n        <button className=\"edit-button\"\n            type=\"button\"\n            id={props.id}\n            onClick={() => {\n                navigate(\"/habit-tracker/habit-template-edit-\" + props.id)\n            }} >\n            Edit\n        </button>\n    )\n}\n\nfunction Day(props) {\n    return <div className=\"inline-block mr1\" key={props.keyVal}>\n        {props.day}\n    </div>\n}\n\nclass HabitTemplates extends Component {\n    constructor(props) {\n        super(props);\n\n        let JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        let activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n\n        // TODO if user navigates to this page without \n        // any activeHabitTemplates inactiveHabitTemplates being made then\n        // suggest user goto HabitTemplate page.\n\n        // TODO add inactiveHabitTemp\n        // let JSONinactiveHabitTemp = localStorage.getItem('inactiveHabitTemplates')\n        // let inactiveHabitTemp = JSON.parse(JSONinactiveHabitTemp)\n\n        this.state = {\n            activeHabitTemp: activeHabitTemp ?? []\n            // inactiveHabitTemp: inactiveHabitTemp  \n        }\n        console.log('CREATED HabitTemplates state: ', this.state);\n    }\n\n    saveToLocalStorage(habitTempString) {\n        console.log('saveToLocalStorage ' + habitTempString);\n        let JSONHabitTemp = JSON.stringify(this.state[habitTempString])\n        localStorage.setItem('activeHabitTemplates', JSONHabitTemp)\n    }\n\n    handleRemove(id, habitTempString) {\n        let habitTemps = { ...this.state[habitTempString] }\n\n        console.log('handleRemove for ' + habitTempString, ' ID: ' + id)\n        console.log('BEFORE DELETE state ', this.state[habitTempString])\n        delete habitTemps[id]\n\n        if (habitTempString === 'activeHabitTemp') {\n            this.setState({\n                activeHabitTemp: habitTemps\n            }, this.saveToLocalStorage.bind(this, 'activeHabitTemp'))\n        }\n        // if(habitTempString === 'inactiveHabitTemp') {\n        //     this.setState({\n        //         inactiveHabitTemp: habitTemps\n        //     }, this.saveToLocalStorage.bind(this))\n        // }\n    }\n\n    render() {\n        const activeHabitTemp = this.state.activeHabitTemp\n        // const inactiveHabitTemp = this.state.inactiveHabitTemp\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n        let message = activeHabitTemp.length === 0 ?\n            (<p className=\"\">\n                You have no Habits! Maybe you might want to create a <Link to=\"/habit-tracker/habit-template\">Habit.</Link>\n            </p>)\n            :\n            (<p className=\"\">\n                View all my Habits.\n            </p>)\n\n        let activeHabitTempList = Object.keys(activeHabitTemp).map(\n            (key) =>\n                <li className=\"mb1\" key={key}>\n                    <div className=\"mb1\">\n                        <b>{activeHabitTemp[key].name}: </b>\n                        <span>{activeHabitTemp[key].dailyOccurrence}x</span>\n                    </div>\n                    <div className=\"pl1\">\n                        <div className=\"mb1\">\n                            {\n                                daysOfTheWeeks.reduce((acc, day, i) => {\n                                    if (activeHabitTemp[key].weeklyOccurrence[day])\n                                        acc.push(<Day key={i} day={day} />)\n\n                                    return acc\n                                }, [])\n                            }\n                        </div>\n                        <div className=\"habit-button-container\">\n                            <button className=\"remove-button\" type=\"button\" onClick={() => this.handleRemove(key, 'activeHabitTemp')}>\n                                Remove\n                            </button>\n                            <EditButton id={key} />\n                        </div>\n                    </div>\n                </li>\n        )\n\n        // let inactiveHabits = props.habits.filter(habit => !habit.active)\n        // let inactiveHabitNames = inactiveHabits.map(habit => <li>{habit.name}</li>)\n\n        return (\n            <div className=\"grid-wrapper\">\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n\n                <div className=\"pb5\">\n                    <h2>All My Habits:</h2>\n\n                    <div className=\"pl1\">\n                        {message}\n                        {/* <h4>Habits:</h4> */}\n                        <ul>\n                            {activeHabitTempList}\n                        </ul>\n                    </div>\n\n\n                    {/* <h4>Inactive Habits:</h4>\n                <ul>\n                    {inactiveHabitNames}\n                </ul> */}\n\n                    {/* TODO Add a clickable button to edit page in the HabitTemplate.js page\n                you will have to make sure that when editing the entry and saving it is not creating\n                a new entry\n\n                TODO Also add a way to delete an entry on the page. Or move it to the inactiveHabits list */}\n                </div>\n\n                <div></div>{/* Used for sides in grid. Needed to work properly. */}\n            </div>\n        )\n    }\n\n}\n\nexport default HabitTemplates;","import { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport Habits from './Habits';\nimport HabitTemplate from './HabitTemplate';\nimport HabitTemplateEdit from './HabitTemplateEdit';\nimport HabitTemplates from './HabitTemplates';\n\nimport './index.css'\n\n// function ProfilePage() {\n//   // Get the userId param from the URL.\n//   let { habitId } = useParams();\n// }\n\nconst rootElement = document.getElementById(\"root\");\nlet direct = 'habits';\nif (sessionStorage.getItem('location')) {\n  direct = sessionStorage.getItem('location')\n  sessionStorage.removeItem('location')\n}\nrender(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/habit-tracker/\" element={<App />}>\n        {/* Traffic is being directed here, based on sessionStorage 'locations' value. \n            Which is set in 404.html page.*/}\n        <Route path=\"/habit-tracker/\" element={<Navigate to={'/habit-tracker/' + direct} />} />\n        <Route path=\"habits\" element={<Habits />} />\n        <Route path=\"habit-template\" element={<HabitTemplate />} />\n        <Route path=\"habit-template-edit-:habitId\" element={<HabitTemplateEdit />} />\n        <Route path=\"habit-templates\" element={<HabitTemplates />} />\n        <Route\n          path=\"*\"\n          element={\n            <main style={{ padding: \"1rem\", textAlign: \"center\" }}>\n              <p>Sorry you have navigated to a page that does not exist.\n                Try going to the <Link to=\"/habit-tracker/habits\">Habits page</Link> instead.</p>\n            </main>\n          }\n        />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n);"],"sourceRoot":""}