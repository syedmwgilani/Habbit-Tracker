{"version":3,"sources":["helperModule.js","WeekInput.js","HabitTemplate.js","index.js"],"names":["module","exports","getNestedVal","obj","propArr","reduce","innerObj","prop","level","getInnerObj","propLessOneLev","slice","length","this","setNestedVal","value","arr","WeekInput","props","htmlFor","type","id","name","checked","monday","onChange","event","tuesday","wednesday","thursday","friday","saturday","sunday","require","HabitTemplate","state","numberOfDays","weeklyOccurrence","dailyOccurrence","reminder","reminderTimes","target","copyState","split","setState","handleInputChange","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d961dd18.chunk.js","sourcesContent":["module.exports = {\n    getNestedVal: function (obj, propArr) {\n        return propArr.reduce((innerObj, prop, level) => {\n            return innerObj[prop]\n        }, obj);\n    },\n\n\n    getInnerObj: function (obj, propArr) {\n        const propLessOneLev = propArr.slice(0, propArr.length - 1)\n        return this.getNestedVal(obj, propLessOneLev)\n    },\n\n    setNestedVal: function (obj, propArr, value) {\n        return propArr.reduce((innerObj, prop, level, arr) => {\n            if (level === arr.length - 1) {\n                innerObj[prop] = value;\n                return innerObj;\n            }\n\n            return innerObj[prop]\n        }, obj);\n    }\n}","function WeekInput(props) {\n\n    return(\n    <div>\n        <span>Weekly Occurence: </span>\n\n        <label htmlFor=\"mondayId\">\n            <input type=\"checkbox\"\n                id=\"mondayId\"\n                name=\"weeklyOccurrence.monday\"\n                checked={props.monday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Monday</span>\n        </label>\n        <label htmlFor=\"tuesdayId\">\n            <input type=\"checkbox\"\n                id=\"tuesdayId\"\n                name=\"weeklyOccurrence.tuesday\"\n                checked={props.tuesday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Tuesday</span>\n        </label>\n        <label htmlFor=\"wednesdayId\">\n            <input type=\"checkbox\"\n                id=\"wednesdayId\"\n                name=\"weeklyOccurrence.wednesday\"\n                checked={props.wednesday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Wednesday</span>\n        </label>\n        <label htmlFor=\"thursdayId\">\n            <input type=\"checkbox\"\n                id=\"thursdayId\"\n                name=\"weeklyOccurrence.thursday\"\n                checked={props.thursday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Thursday</span>\n        </label>\n        <label htmlFor=\"fridayId\">\n            <input type=\"checkbox\"\n                id=\"fridayId\"\n                name=\"weeklyOccurrence.friday\"\n                checked={props.friday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Friday</span>\n        </label>\n        <label htmlFor=\"saturdayId\">\n            <input type=\"checkbox\"\n                id=\"saturdayId\"\n                name=\"weeklyOccurrence.saturday\"\n                checked={props.saturday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Saturday</span>\n        </label>\n        <label htmlFor=\"sundayId\">\n            <input type=\"checkbox\"\n                id=\"sundayId\"\n                name=\"weeklyOccurrence.sunday\"\n                checked={props.sunday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Sunday</span>\n        </label>\n    </div >\n    );\n}\n\nexport default WeekInput;","import { Component } from \"react\"\nimport WeekInput from \"./WeekInput\";\nconst {setNestedVal} = require('./helperModule.js');\n\nclass HabitTemplate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: props.name,\n            numberOfDays: props.numberOfDays,\n            weeklyOccurrence: {\n                monday: props.weeklyOccurrence.monday,\n                tuesday: props.weeklyOccurrence.tuesday,\n                wednesday: props.weeklyOccurrence.wednesday,\n                thursday: props.weeklyOccurrence.thursday,\n                friday: props.weeklyOccurrence.friday,\n                saturday: props.weeklyOccurrence.saturday,\n                sunday: props.weeklyOccurrence.sunday\n            },\n            dailyOccurrence: props.dailyOccurrence,\n            reminder: props.reminder,\n            reminderTimes: props.reminderTimes,\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        const copyState = {...this.state}\n        const propArr = name.split('.')\n        setNestedVal(copyState, propArr, value)\n        this.setState(copyState)\n\n        // this.setState({ [name]: value });\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>Habit Template</h1>\n                <div>\n                    <label htmlFor=\"habitNameId\">\n                        <span>Name:</span>\n                        <input type=\"text\"\n                            id=\"habitNameId\"\n                            name=\"name\"\n                            value={this.state.name}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"numberOfDaysId\">\n                        <span>Number of Days:</span>\n                        <input type=\"number\"\n                            id=\"numberOfDaysId\"\n                            name=\"numberOfDays\"\n                            value={this.state.numberOfDays}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                <div>\n                    <WeekInput {...this.state.weeklyOccurrence} onChange={ (event) => this.handleInputChange(event) } />\n                </div>\n                <div>\n                    <label htmlFor=\"dailyOccurrenceId\">\n                        <span>Daily Occurrence:</span>\n                        <input type=\"number\"\n                            id=\"dailyOccurrenceId\"\n                            name=\"dailyOccurrence\"\n                            value={this.state.dailyOccurrence}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"reminderId\">\n                        <span>Reminder:</span>\n                        <input type=\"checkbox\"\n                            id=\"reminderId\"\n                            name=\"reminder\"\n                            checked={this.state.reminder}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"reminderTimesId\">\n                        <span>Reminder Time:</span>\n                        <input type=\"text\"\n                            id=\"reminderTimesId\"\n                            name=\"reminderTimes\"\n                            value={this.state.reminderTimes}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HabitTemplate;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport HabitTemplate from './HabitTemplate'\n// import Objects from './Objects'\n// import ProgressBar from './ProgressBar'\n// import App from './App'\n\n\nimport './index.css'\n\nlet data = {\n    \"name\": \"Push ups\",\n    \"numberOfDays\": 32,\n    \"weeklyOccurrence\": {\n        \"monday\": false,\n        \"tuesday\": false,\n        \"wednesday\": true,\n        \"thursday\": false,\n        \"friday\": true,\n        \"saturday\": false,\n        \"sunday\": false\n    },\n    \"dailyOccurrence\": 2,\n    \"reminder\": true,\n    \"reminderTimes\": \"8:30 PM\"\n};\n\nReactDOM.render(<HabitTemplate {...data}/>, document.getElementById('root'))\n\n"],"sourceRoot":""}