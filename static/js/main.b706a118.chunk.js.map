{"version":3,"sources":["helperModule.js","App.js","Habits.js","WeekInput.js","HabitTemplate.js","HabitTemplates.js","index.js"],"names":["module","exports","getNestedVal","obj","propArr","reduce","innerObj","prop","level","getInnerObj","propLessOneLev","slice","length","this","setNestedVal","value","arr","generateUIDKey","ranNumStr","Math","floor","random","toString","addPrefix","condition","sting","prefix","objectIsEmpty","Object","keys","dot","defaultVal","returnDefault","args","acc","cur","App","style","borderBottom","paddingBottom","to","require","InnerBar","props","innerBar","width","size","className","ProgressBar","progress","onClick","Habit","name","dailyOccurrence","Habits","today","Date","dayOfTheWeek","getDay","monthStr","getMonth","dayStr","getDate","dateString","getFullYear","JSONactiveHabitTemp","localStorage","getItem","activeHabitTemp","JSON","parse","console","log","habits","JSONhabits","key","weeklyOccurrence","habit","oldHabitsData","state","saveHabitLocalStorage","habitsJson","stringify","setItem","id","increment","setState","bind","habitsEleMap","map","i","event","incrementProgress","Component","WeekInput","htmlFor","type","checked","Monday","onChange","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","HabitTemplate","target","copyState","split","handleInputChange","saveStateToLocalStorage","Days","day","vals","keyVal","HabitTemplates","habitTempString","JSONHabitTemp","habitTemps","saveToLocalStorage","daysOfTheWeeks","activeHabitTempList","handleRemove","rootElement","document","getElementById","render","path","element","padding"],"mappings":"sGAAAA,EAAOC,QAAU,CACbC,aAAc,SAAUC,EAAKC,GACzB,OAAOA,EAAQC,QAAO,SAACC,EAAUC,EAAMC,GACnC,OAAOF,EAASC,KACjBJ,IAIPM,YAAa,SAAUN,EAAKC,GACxB,IAAMM,EAAiBN,EAAQO,MAAM,EAAGP,EAAQQ,OAAS,GACzD,OAAOC,KAAKX,aAAaC,EAAKO,IAGlCI,aAAc,SAAUX,EAAKC,EAASW,GAClC,OAAOX,EAAQC,QAAO,SAACC,EAAUC,EAAMC,EAAOQ,GAC1C,OAAIR,IAAUQ,EAAIJ,OAAS,GACvBN,EAASC,GAAQQ,EACVT,GAGJA,EAASC,KACjBJ,IAIPc,eAAgB,SAAUd,GAEtB,IADA,IAAIe,EAAYC,KAAKC,MAAsB,KAAhBD,KAAKE,UAAoBC,WAC9CnB,EAAIe,IACNA,EAAYC,KAAKC,MAAsB,KAAhBD,KAAKE,UAAoBC,WAEpD,OAAOJ,GAGXK,UAAW,SAAUC,EAAWC,EAAOC,GACnC,OAAOF,IAAcC,EAAQC,EAASD,GAG1CE,cAAe,SAAUxB,GACrB,OAAmC,IAA5ByB,OAAOC,KAAK1B,GAAKS,QAM5BkB,IAAK,SAAUC,GAAqB,IAChC,IAAIC,GAAgB,EADY,mBAANC,EAAM,iCAANA,EAAM,kBAGhC,OAAOA,EAAK5B,QAAQ,SAAS6B,EAAKC,GAC9B,OAAGH,EACQD,EACa,qBAAdG,EAAIC,IAAsC,OAAbD,EAAIC,IACvCH,GAAgB,EACTD,GAEJG,EAAIC,S,8FCpDR,SAASC,IACtB,OACE,gCACE,2DACA,sBACEC,MAAO,CACLC,aAAc,YACdC,cAAe,QAHnB,UAME,cAAC,IAAD,CAAMC,GAAG,wBAAT,oBANF,KAMmD,IACjD,cAAC,IAAD,CAAMA,GAAG,gCAAT,4BAPF,KAOmE,IACjE,cAAC,IAAD,CAAMA,GAAG,iCAAT,gCAEF,cAAC,IAAD,O,8CCfEjB,EAAckB,EAAQ,IAAtBlB,UAGR,SAASmB,EAASC,GACd,IAEMC,EAAW,CACbC,OAHiBF,EAAMG,MAAQ,IAAMH,EAAMG,KAAO,KAAO,KAM7D,OACI,sBAAKC,UAAU,gBAAgBV,MAAOO,EAAtC,cAAkDD,EAAMG,KAAxD,QAIR,SAASE,EAAYL,GACjB,OACI,gCACI,qBAAKI,UAAU,gBAAf,SACI,cAACL,EAAD,CAAUI,KAAMH,EAAMM,aAE1B,uBACA,wBAAQC,QAASP,EAAMO,QAAvB,2BAKZ,SAASC,EAAMR,GACX,OACI,gCACI,4BAAIA,EAAMS,OACV,cAACJ,EAAD,CAAaC,SAAUN,EAAMM,SACzBC,QAASP,EAAMO,UACnB,kDAAqBP,EAAMU,sB,IAqIxBC,E,kDA/HX,WAAYX,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAMY,EAAQ,IAAIC,KAEZC,EADiB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACtDF,EAAMG,UAEpCC,GAAYJ,EAAMK,WAAa,GAAGtC,WAClCuC,EAASN,EAAMO,UAAUxC,WACzByC,EAAaR,EAAMS,cAAgB,IACnCzC,GAAU,kBAAMoC,EAAS/C,OAAS,IAAG+C,EAAU,KAC/C,IACApC,GAAU,kBAAMsC,EAAOjD,OAAS,IAAGiD,EAAQ,KAE3CI,EAAsBC,aAAaC,QAAQ,wBAC3CC,EAAkBC,KAAKC,MAAML,GACnCM,QAAQC,IAAI,2BAA4BJ,GAExC,IAAIK,EAAS,GACb,GAAIL,EAAiB,CACjB,IAAMM,EAAaR,aAAaC,QAAQ,UAAYJ,GAEpD,GAAmB,OAAfW,EAEAD,EAAS7C,OAAOC,KAAKuC,GAAiB/D,QAAO,SAACoE,EAAQE,GAClD,GAAIP,EAAgBO,GAAKC,iBAAiBnB,GAAe,CACrD,IAAMoB,EAAQ,GAMd,OALAA,EAAMzB,KAAOgB,EAAgBO,GAAKvB,KAClCyB,EAAMxB,gBAAkBe,EAAgBO,GAAKtB,gBAC7CwB,EAAM5B,SAAW,EAEjBwB,EAAOE,GAAOE,EACPJ,EAEX,OAAOA,IACR,QACA,CAEH,IAAMK,EAAgBT,KAAKC,MAAMI,GAEjCD,EAAS7C,OAAOC,KAAKuC,GAAiB/D,QAAO,SAACoE,EAAQE,GAElD,IAAIE,EAAQC,EAAcH,GAE1B,OAAGE,GAAST,EAAgBO,GAAKC,iBAAiBnB,IAC9CoB,EAAMzB,KAAOgB,EAAgBO,GAAKvB,KAClCyB,EAAMxB,gBAAkBe,EAAgBO,GAAKtB,gBAE7CoB,EAAOE,GAAOE,EACPJ,GACDL,EAAgBO,GAAKC,iBAAiBnB,KAC5CoB,EAAQ,IACFzB,KAAOgB,EAAgBO,GAAKvB,KAClCyB,EAAMxB,gBAAkBe,EAAgBO,GAAKtB,gBAC7CwB,EAAM5B,SAAW,EAEjBwB,EAAOE,GAAOE,EACPJ,GAGJA,IACR,KA7DI,OAiEf,EAAKM,MAAQ,CACTtB,aAAcA,EACdM,WAAYA,EACZU,OAAQA,GAEZF,QAAQC,IAAI,wBAAyB,EAAKO,OAE1C,EAAKC,wBAxEU,E,yDA2EnB,WACI,IAAMC,EAAaZ,KAAKa,UAAUrE,KAAKkE,MAAMN,QAC7CP,aAAaiB,QAAQ,UAAYtE,KAAKkE,MAAMhB,WAAYkB,GAExDV,QAAQC,IAAI,eAAgBS,K,+BAGhC,SAAkBG,GACdb,QAAQC,IAAR,+BAAoCY,EAApC,OAEA,IAAIX,EAAM,eAAO5D,KAAKkE,MAAMN,QACxBI,EAAQJ,EAAOW,GAEbC,EAAY,IAAMR,EAAMxB,gBAC9BwB,EAAM5B,SAAW4B,EAAM5B,SAAWoC,EAElCd,QAAQC,IAAI,WAAYC,EAAOW,IAC/BvE,KAAKyE,SAAS,CACVb,OAAQA,GACT5D,KAAKmE,sBAAsBO,KAAK1E,S,oBAGvC,WAAU,IAAD,OACC4D,EAAM,eAAO5D,KAAKkE,MAAMN,QACxBe,EAAe5D,OAAOC,KAAK4C,GAAQgB,KAAI,SAACd,EAAKe,GAC/C,OACI,6BACI,cAACvC,EAAD,2BAAWsB,EAAOE,IAAlB,IAAwBzB,QAAS,SAAAyC,GAAK,OAAI,EAAKC,kBAAkBjB,QAD5DA,MAMjB,OACI,uBAAM5B,UAAU,UAAhB,UACI,qBAAKA,UAAU,YACf,sBAAKA,UAAU,UAAf,UACI,4BAEKlC,KAAKkE,MAAMtB,eAIhB,6BACK+B,OAGT,qBAAKzC,UAAU,mB,GA1HV8C,aCkCNC,MAzEf,SAAmBnD,GAEf,OACA,gCACI,sDAEA,wBAAOoD,QAAQ,WAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,WACHhC,KAAK,0BACL6C,QAAStD,EAAMuD,OACfC,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,6CAEJ,wBAAOI,QAAQ,YAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,YACHhC,KAAK,2BACL6C,QAAStD,EAAMyD,QACfD,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,8CAEJ,wBAAOI,QAAQ,cAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,cACHhC,KAAK,6BACL6C,QAAStD,EAAM0D,UACfF,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,gDAEJ,wBAAOI,QAAQ,aAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,aACHhC,KAAK,4BACL6C,QAAStD,EAAM2D,SACfH,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,+CAEJ,wBAAOI,QAAQ,WAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,WACHhC,KAAK,0BACL6C,QAAStD,EAAM4D,OACfJ,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,6CAEJ,wBAAOI,QAAQ,aAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,aACHhC,KAAK,4BACL6C,QAAStD,EAAM6D,SACfL,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,+CAEJ,wBAAOI,QAAQ,WAAf,UACI,uBAAOC,KAAK,WACRZ,GAAG,WACHhC,KAAK,0BACL6C,QAAStD,EAAM8D,OACfN,SAAW,SAACR,GAAD,OAAWhD,EAAMwD,SAASR,MAEzC,iDCjEZ,EAA4ClD,EAAQ,IAA7C3B,EAAP,EAAOA,aAAcG,EAArB,EAAqBA,eAAgBa,EAArC,EAAqCA,IAgItB4E,E,kDA5HX,WAAY/D,GAAQ,IAAD,8BACf,cAAMA,IAEDoC,MAAQ,CACT3B,KAAMtB,EAAI,GAAIa,EAAO,QAErBiC,iBAAkB,CACdsB,OAAQpE,GAAI,EAAOa,EAAO,mBAAoB,UAC9CyD,QAAStE,GAAI,EAAOa,EAAO,mBAAoB,WAC/C0D,UAAWvE,GAAI,EAAOa,EAAO,mBAAoB,aACjD2D,SAAUxE,GAAI,EAAOa,EAAO,mBAAoB,YAChD4D,OAAQzE,GAAI,EAAOa,EAAO,mBAAoB,UAC9C6D,SAAU1E,GAAI,EAAOa,EAAO,mBAAoB,YAChD8D,OAAQ3E,GAAI,EAAOa,EAAO,mBAAoB,WAElDU,gBAAiBvB,EAAI,EAAGa,EAAO,oBAfpB,E,qDAuBnB,SAAkBgD,GACd,IAAMgB,EAAShB,EAAMgB,OACf5F,EAAwB,aAAhB4F,EAAOX,KAAsBW,EAAOV,QAAUU,EAAO5F,MAC7DqC,EAAOuD,EAAOvD,KAEdwD,EAAS,eAAO/F,KAAKkE,OACrB3E,EAAUgD,EAAKyD,MAAM,KAC3B/F,EAAa8F,EAAWxG,EAASW,GACjCF,KAAKyE,SAASsB,K,qCAMlB,WACI,IAAI3C,EAAsBC,aAAaC,QAAQ,wBAC3CF,IACAA,EAAsBI,KAAKa,UAAU,IACrChB,aAAaiB,QAAQ,uBAAwBlB,IAGjD,IAAIG,EAAkBC,KAAKC,MAAML,GAEjCG,EADYnD,EAAemD,IACHvD,KAAKkE,MAC7Bb,aAAaiB,QAAQ,uBAAwBd,KAAKa,UAAUd,M,oBAMhE,WAAU,IAAD,OAEL,OACI,gCACI,gDACA,8BACI,wBAAO2B,QAAQ,cAAf,UACI,yCACA,uBAAOC,KAAK,OACRZ,GAAG,cACHhC,KAAK,OACLrC,MAAOF,KAAKkE,MAAM3B,KAClB+C,SAAW,SAACR,GAAD,OAAW,EAAKmB,kBAAkBnB,WAezD,8BACI,cAAC,EAAD,2BAAe9E,KAAKkE,MAAMH,kBAA1B,IAA4CuB,SAAW,SAACR,GAAD,OAAW,EAAKmB,kBAAkBnB,SAE7F,8BACI,wBAAOI,QAAQ,oBAAf,UACI,qDACA,uBAAOC,KAAK,SACRZ,GAAG,oBACHhC,KAAK,kBACLrC,MAAOF,KAAKkE,MAAM1B,gBAClB8C,SAAW,SAACR,GAAD,OAAW,EAAKmB,kBAAkBnB,WA0BzD,8BACI,wBAAQzC,QAAU,SAAAyC,GAAK,OAAI,EAAKoB,2BAAhC,2B,GAvHQlB,aCF5B,SAASmB,EAAKrE,GACV,OAAO,gCAAyBA,EAAMsE,IAA/B,KAAsCtE,EAAMuE,OAAlCvE,EAAMwE,Q,IA6GZC,E,kDAzGX,WAAYzE,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAIsB,EAAsBC,aAAaC,QAAQ,wBAC3CC,EAAkBC,KAAKC,MAAML,GAJlB,OAcf,EAAKc,MAAQ,CACTX,gBAAiBA,GAGrBG,QAAQC,IAAI,iCAAkC,EAAKO,OAlBpC,E,sDAqBnB,SAAmBsC,GACf9C,QAAQC,IAAI,sBAAwB6C,GACpC,IAAIC,EAAgBjD,KAAKa,UAAUrE,KAAKkE,MAAMsC,IAC9CnD,aAAaiB,QAAQ,uBAAwBmC,K,0BAGjD,SAAalC,EAAIiC,GACb,IAAIE,EAAU,eAAO1G,KAAKkE,MAAMsC,IAEhC9C,QAAQC,IAAI,oBAAsB6C,EAAiB,QAAUjC,GAC7Db,QAAQC,IAAI,uBAAwB3D,KAAKkE,MAAMsC,WACxCE,EAAWnC,GAEK,oBAApBiC,GACCxG,KAAKyE,SAAS,CACVlB,gBAAiBmD,GAClB1G,KAAK2G,mBAAmBjC,KAAK1E,KAAM,sB,oBAS9C,WAAU,IAAD,OACCuD,EAAkBvD,KAAKkE,MAAMX,gBAE7BqD,EAAiB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAEtFC,EAAsB9F,OAAOC,KAAKuC,GAAiBqB,KACnD,SAACd,GAAD,OACI,+BACI,8BAAMP,EAAgBO,GAAKvB,OAC3B,oDAAuBgB,EAAgBO,GAAKtB,mBAC5C,6BAEQoE,EAAehC,KAAI,SAACwB,EAAKvB,GAAN,OACf,6BACI,cAACsB,EAAD,CACIC,IAAKA,EACLC,KAAM9C,EAAgBO,GAAKC,iBAAiBqC,GAAO,MAHlDvB,QAQrB,wBAAQM,KAAK,SAAS9C,QAAS,kBAAM,EAAKyE,aAAahD,EAAK,oBAA5D,sBAdKA,MAuBjB,OACI,sBAAK5B,UAAU,UAAf,UACI,qBAAKA,UAAU,YACf,sBAAKA,UAAU,UAAf,UACI,8dACA,6CACA,gDACA,6BACK2E,OAcT,qBAAK3E,UAAU,mB,GAnGF8C,aCOvB+B,G,MAAcC,SAASC,eAAe,SAC5CC,iBACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,kBAAkBC,QAAS,cAAC7F,EAAD,IAAvC,UACE,cAAC,IAAD,CAAO4F,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CACED,KAAK,IACLC,QACE,sBAAM5F,MAAO,CAAE6F,QAAS,QAAxB,SACE,iEAOZN,K","file":"static/js/main.b706a118.chunk.js","sourcesContent":["module.exports = {\n    getNestedVal: function (obj, propArr) {\n        return propArr.reduce((innerObj, prop, level) => {\n            return innerObj[prop]\n        }, obj);\n    },\n\n\n    getInnerObj: function (obj, propArr) {\n        const propLessOneLev = propArr.slice(0, propArr.length - 1)\n        return this.getNestedVal(obj, propLessOneLev)\n    },\n\n    setNestedVal: function (obj, propArr, value) {\n        return propArr.reduce((innerObj, prop, level, arr) => {\n            if (level === arr.length - 1) {\n                innerObj[prop] = value;\n                return innerObj;\n            }\n\n            return innerObj[prop]\n        }, obj);\n    },\n\n    //obj - check object keys to see if id exists\n    generateUIDKey: function (obj) {\n        let ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        while(obj[ranNumStr]) {\n            ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        }\n        return ranNumStr;\n    },\n\n    addPrefix: function (condition, sting, prefix) {\n        return condition() ? sting : prefix + sting\n    },\n\n    objectIsEmpty: function (obj) {\n        return Object.keys(obj).length === 0;\n    },\n\n    // Used to traverse an object and its potential properties.\n    // If property in list is not found then defaultVal is returned.\n    // ex: dot(false, props, 'weeklyOccurrence', 'wednesday')\n    dot: function (defaultVal, ...args) {\n        let returnDefault = false;\n    \n        return args.reduce( function(acc, cur) {\n            if(returnDefault)\n                return defaultVal;\n            if(typeof(acc[cur]) === 'undefined' || acc[cur] === null) {\n                returnDefault = true;\n                return defaultVal;\n            }\n            return acc[cur];\n        })\n    },\n}","import { Outlet, Link } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Outter Template in App.js</h1>\n      <nav\n        style={{\n          borderBottom: \"solid 1px\",\n          paddingBottom: \"1rem\"\n        }}\n      >\n        <Link to=\"/habit-tracker/habits\">Habits</Link> |{\" \"}\n        <Link to=\"/habit-tracker/habit-template\">Habit Template</Link> |{\" \"}\n        <Link to=\"/habit-tracker/habit-templates\">Habit Templates</Link>\n      </nav>\n      <Outlet />\n    </div>\n  );\n}","import React, { Component } from 'react'\nconst { addPrefix } = require('./helperModule.js');\n\n\nfunction InnerBar(props) {\n    const progPercent = (props.size <= 100 ? props.size : 100) + '%'\n\n    const innerBar = {\n        width: progPercent,\n    }\n\n    return (\n        <div className=\"bg-blue white\" style={innerBar}> {props.size}% </div>\n    )\n}\n\nfunction ProgressBar(props) {\n    return (\n        <div>\n            <div className=\"bg-light-gray\">\n                <InnerBar size={props.progress} />\n            </div>\n            <br />\n            <button onClick={props.onClick}> Click Me </button>\n        </div >\n    )\n}\n\nfunction Habit(props) {\n    return (\n        <div>\n            <p>{props.name}</p>\n            <ProgressBar progress={props.progress}\n                onClick={props.onClick} />\n            <p>Daily Occurence: {props.dailyOccurrence}</p>\n        </div>\n    )\n}\n\nclass Habits extends Component {\n    constructor(props) {\n        super(props)\n\n        const today = new Date()\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const dayOfTheWeek = daysOfTheWeeks[today.getDay()]\n\n        const monthStr = (today.getMonth() + 1).toString()\n        const dayStr = today.getDate().toString()\n        const dateString = today.getFullYear() + '_'\n            + addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '_'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n\n        const JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        const activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        console.log('LOADED activeHabitTemp: ', activeHabitTemp)\n\n        let habits = {}\n        if (activeHabitTemp) {\n            const JSONhabits = localStorage.getItem('habits_' + dateString)\n\n            if (JSONhabits === null) {\n                //Create new habits obj\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        const habit = {}\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n                    return habits\n                }, {})\n            } else {\n                //Update old habits obj\n                const oldHabitsData = JSON.parse(JSONhabits)\n\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n\n                    let habit = oldHabitsData[key]\n\n                    if(habit && activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n\n                        habits[key] = habit\n                        return habits\n                    } else if(activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]){\n                        habit = {}\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n\n                    return habits\n                }, {})\n            }\n        }\n\n        this.state = {\n            dayOfTheWeek: dayOfTheWeek,\n            dateString: dateString,\n            habits: habits,\n        }\n        console.log('CREATED Habit state: ', this.state)\n\n        this.saveHabitLocalStorage()\n    }\n\n    saveHabitLocalStorage() {\n        const habitsJson = JSON.stringify(this.state.habits)\n        localStorage.setItem('habits_' + this.state.dateString, habitsJson)\n        \n        console.log('SAVED Habits', habitsJson);\n    }\n\n    incrementProgress(id) {\n        console.log(`---\\nCLICKED habits['${id}']`);\n\n        let habits = {...this.state.habits}\n        let habit = habits[id]\n\n        const increment = 100 / habit.dailyOccurrence\n        habit.progress = habit.progress + increment\n\n        console.log('UPDATED ', habits[id])\n        this.setState({\n            habits: habits\n        }, this.saveHabitLocalStorage.bind(this))\n    }\n\n    render() {\n        const habits = {...this.state.habits}\n        const habitsEleMap = Object.keys(habits).map((key, i) => {\n            return (\n                <li key={key}>\n                    <Habit {...habits[key]} onClick={event => this.incrementProgress(key)} />\n                </li>\n            )\n        })\n\n        return (\n            <main className=\"wrapper\">\n                <div className=\"margin1\"></div>\n                <div className=\"content\">\n                    <p>\n                        {/* TODO add a Refresh to set the days */}\n                        {this.state.dayOfTheWeek}\n                    </p>\n                    {/* TODO if activeHabitTemp is null, then add button to the page to \"Create a Habit\". \n                    Also add message no \"Habits Today.\" */}\n                    <ul>\n                        {habitsEleMap}\n                    </ul>\n                </div>\n                <div className=\"margin2\"></div>\n            </main>\n        )\n    }\n}\n\nexport default Habits","function WeekInput(props) {\n\n    return(\n    <div>\n        <span>Weekly Occurence: </span>\n\n        <label htmlFor=\"mondayId\">\n            <input type=\"checkbox\"\n                id=\"mondayId\"\n                name=\"weeklyOccurrence.Monday\"\n                checked={props.Monday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Monday</span>\n        </label>\n        <label htmlFor=\"tuesdayId\">\n            <input type=\"checkbox\"\n                id=\"tuesdayId\"\n                name=\"weeklyOccurrence.Tuesday\"\n                checked={props.Tuesday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Tuesday</span>\n        </label>\n        <label htmlFor=\"wednesdayId\">\n            <input type=\"checkbox\"\n                id=\"wednesdayId\"\n                name=\"weeklyOccurrence.Wednesday\"\n                checked={props.Wednesday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Wednesday</span>\n        </label>\n        <label htmlFor=\"thursdayId\">\n            <input type=\"checkbox\"\n                id=\"thursdayId\"\n                name=\"weeklyOccurrence.Thursday\"\n                checked={props.Thursday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Thursday</span>\n        </label>\n        <label htmlFor=\"fridayId\">\n            <input type=\"checkbox\"\n                id=\"fridayId\"\n                name=\"weeklyOccurrence.Friday\"\n                checked={props.Friday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Friday</span>\n        </label>\n        <label htmlFor=\"saturdayId\">\n            <input type=\"checkbox\"\n                id=\"saturdayId\"\n                name=\"weeklyOccurrence.Saturday\"\n                checked={props.Saturday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Saturday</span>\n        </label>\n        <label htmlFor=\"sundayId\">\n            <input type=\"checkbox\"\n                id=\"sundayId\"\n                name=\"weeklyOccurrence.Sunday\"\n                checked={props.Sunday}\n                onChange={ (event) => props.onChange(event) }\n            />\n            <span>Sunday</span>\n        </label>\n    </div >\n    );\n}\n\nexport default WeekInput;","import { Component } from \"react\"\nimport WeekInput from \"./WeekInput\";\nconst {setNestedVal, generateUIDKey, dot} = require('./helperModule.js');\n\nclass HabitTemplate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: dot('', props, 'name'),\n            // numberOfDays: dot(0, props, 'numberOfDays'),\n            weeklyOccurrence: {\n                Monday: dot(false, props, 'weeklyOccurrence', 'Monday'),\n                Tuesday: dot(false, props, 'weeklyOccurrence', 'Tuesday'),\n                Wednesday: dot(false, props, 'weeklyOccurrence', 'Wednesday'),\n                Thursday: dot(false, props, 'weeklyOccurrence', 'Thursday'),\n                Friday: dot(false, props, 'weeklyOccurrence', 'Friday'),\n                Saturday: dot(false, props, 'weeklyOccurrence', 'Saturday'),\n                Sunday: dot(false, props, 'weeklyOccurrence', 'Sunday')\n            },\n            dailyOccurrence: dot(0, props, 'dailyOccurrence'),\n            //reminder: dot(false, props, 'reminder'),\n            //reminderTimes: dot('', props, 'reminderTimes'),\n            //TODO Allow for multiple reminder times\n            //May allow this to be an array\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        const copyState = {...this.state}\n        const propArr = name.split('.')\n        setNestedVal(copyState, propArr, value)\n        this.setState(copyState)\n\n        // this.setState({ [name]: value });\n    }\n\n    //TODO send to helper modules\n    saveStateToLocalStorage() {\n        let JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        if(!JSONactiveHabitTemp) {\n            JSONactiveHabitTemp = JSON.stringify({});\n            localStorage.setItem('activeHabitTemplates', JSONactiveHabitTemp)\n        } \n        \n        let activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        const uid = generateUIDKey(activeHabitTemp)\n        activeHabitTemp[uid] = (this.state)\n        localStorage.setItem('activeHabitTemplates', JSON.stringify(activeHabitTemp))\n\n        //TODO On save this should go back to the Habits Page\n        // maybe  make it a call back function???\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>Habit Template</h1>\n                <div>\n                    <label htmlFor=\"habitNameId\">\n                        <span>Name:</span>\n                        <input type=\"text\"\n                            id=\"habitNameId\"\n                            name=\"name\"\n                            value={this.state.name}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                {/* <div>\n                    <label htmlFor=\"numberOfDaysId\">\n                        <span>Number of Days:</span>\n                        <input type=\"number\"\n                            id=\"numberOfDaysId\"\n                            name=\"numberOfDays\"\n                            value={this.state.numberOfDays}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div> */}\n                <div>\n                    <WeekInput {...this.state.weeklyOccurrence} onChange={ (event) => this.handleInputChange(event) } />\n                </div>\n                <div>\n                    <label htmlFor=\"dailyOccurrenceId\">\n                        <span>Daily Occurrence:</span>\n                        <input type=\"number\"\n                            id=\"dailyOccurrenceId\"\n                            name=\"dailyOccurrence\"\n                            value={this.state.dailyOccurrence}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                {/* <div>\n                    <label htmlFor=\"reminderId\">\n                        <span>Reminder:</span>\n                        <input type=\"checkbox\"\n                            id=\"reminderId\"\n                            name=\"reminder\"\n                            checked={this.state.reminder}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"reminderTimesId\">\n                        <span>Reminder Time:</span>\n                        <input type=\"text\"\n                            id=\"reminderTimesId\"\n                            name=\"reminderTimes\"\n                            value={this.state.reminderTimes}\n                            onChange={ (event) => this.handleInputChange(event) }\n                        />\n                    </label>\n                </div> */}\n                <div>\n                    <button onClick={ event => this.saveStateToLocalStorage() }>Save</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HabitTemplate;","import React, { Component } from 'react'\n\nfunction Days(props) {\n    return <div key={props.keyVal}>{props.day}: {props.vals}</div>\n}\n\nclass HabitTemplates extends Component {\n    constructor(props) {\n        super(props);\n\n        let JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        let activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n\n        // TODO if user navigates to this page without \n        // any activeHabitTemplates inactiveHabitTemplates being made then\n        // suggest user goto HabitTemplate page.\n\n        // TODO add inactiveHabitTemp\n        // let JSONinactiveHabitTemp = localStorage.getItem('inactiveHabitTemplates')\n        // let inactiveHabitTemp = JSON.parse(JSONinactiveHabitTemp)\n\n        this.state = {\n            activeHabitTemp: activeHabitTemp,\n            // inactiveHabitTemp: inactiveHabitTemp  \n        }\n        console.log('CREATED HabitTemplates state: ', this.state);\n    }\n\n    saveToLocalStorage(habitTempString) {\n        console.log('saveToLocalStorage ' + habitTempString);\n        let JSONHabitTemp = JSON.stringify(this.state[habitTempString])\n        localStorage.setItem('activeHabitTemplates', JSONHabitTemp)\n    }\n\n    handleRemove(id, habitTempString) {        \n        let habitTemps = {...this.state[habitTempString]}\n\n        console.log('handleRemove for ' + habitTempString, ' ID: ' + id)\n        console.log('BEFORE DELETE state ', this.state[habitTempString])\n        delete habitTemps[id]\n\n        if(habitTempString === 'activeHabitTemp') {\n            this.setState({\n                activeHabitTemp: habitTemps\n            }, this.saveToLocalStorage.bind(this, 'activeHabitTemp'))\n        }\n        // if(habitTempString === 'inactiveHabitTemp') {\n        //     this.setState({\n        //         inactiveHabitTemp: habitTemps\n        //     }, this.saveToLocalStorage.bind(this))\n        // }\n    }\n\n    render() {\n        const activeHabitTemp = this.state.activeHabitTemp\n        // const inactiveHabitTemp = this.state.inactiveHabitTemp\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n        let activeHabitTempList = Object.keys(activeHabitTemp).map(\n            (key) =>\n                <li key={key}>\n                    <div>{activeHabitTemp[key].name}</div>\n                    <div>Daily Occurence: {activeHabitTemp[key].dailyOccurrence}</div>\n                    <ul>\n                        {\n                            daysOfTheWeeks.map((day, i) =>\n                                <li key={i}>\n                                    <Days\n                                        day={day}\n                                        vals={activeHabitTemp[key].weeklyOccurrence[day] + ''} />\n                                </li>\n                            )\n                        }\n                    </ul>\n                    <button type=\"button\" onClick={() => this.handleRemove(key, 'activeHabitTemp')}>\n                        Remove\n                    </button>\n                </li>\n        )\n\n        // let inactiveHabits = props.habits.filter(habit => !habit.active)\n        // let inactiveHabitNames = inactiveHabits.map(habit => <li>{habit.name}</li>)\n\n        return (\n            <div className=\"wrapper\">\n                <div className=\"margin1\"></div>\n                <div className=\"content\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n                    <h3>Habits Page</h3>\n                    <h4>Active Habits:</h4>\n                    <ul>\n                        {activeHabitTempList}\n                    </ul>\n\n                    {/* <h4>Inactive Habits:</h4>\n                <ul>\n                    {inactiveHabitNames}\n                </ul> */}\n\n                    {/* TODO Add a clickable button to edit page in the HabitTemplate.js page\n                you will have to make sure that when editing the entry and saving it is not creating\n                a new entry\n\n                TODO Also add a way to delete an entry on the page. Or move it to the inactiveHabits list */}\n                </div>\n                <div className=\"margin2\"></div>\n            </div>\n        )\n    }\n\n}\n\nexport default HabitTemplates;","import { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport Habits from './Habits';\nimport HabitTemplate from './HabitTemplate';\nimport HabitTemplates from './HabitTemplates';\n\nimport './index.css'\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/habit-tracker/\" element={<App />}>\n        <Route path=\"habits\" element={<Habits />} />\n        <Route path=\"habit-template\" element={<HabitTemplate />} />\n        <Route path=\"habit-templates\" element={<HabitTemplates />} />\n        <Route\n          path=\"*\"\n          element={\n            <main style={{ padding: \"1rem\" }}>\n              <p>There's nothing here!</p>\n            </main>\n          }\n        />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n);"],"sourceRoot":""}