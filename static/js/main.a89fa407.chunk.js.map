{"version":3,"sources":["helperModule.js","Habits.js","index.js"],"names":["module","exports","getNestedVal","obj","propArr","reduce","innerObj","prop","level","getInnerObj","propLessOneLev","slice","length","this","setNestedVal","value","arr","generateUIDKey","ranNumStr","Math","floor","random","toString","addPrefix","condition","sting","prefix","require","InnerBar","props","innerBar","width","size","className","style","ProgressBar","progress","onClick","Habit","name","dailyOccurrence","Habits","today","Date","dayOfTheWeek","getDay","monthStr","getMonth","dayStr","getDate","dateString","getFullYear","JSONactiveHabitTemp","localStorage","getItem","activeHabitTemp","JSON","parse","console","log","habits","JSONhabits","Object","keys","key","weeklyOccurrence","habit","oldHabitsData","state","saveHabitLocalStorage","habitsJson","stringify","setItem","id","increment","setState","bind","habitsEleMap","map","i","event","incrementProgress","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a89fa407.chunk.js","sourcesContent":["module.exports = {\n    getNestedVal: function (obj, propArr) {\n        return propArr.reduce((innerObj, prop, level) => {\n            return innerObj[prop]\n        }, obj);\n    },\n\n\n    getInnerObj: function (obj, propArr) {\n        const propLessOneLev = propArr.slice(0, propArr.length - 1)\n        return this.getNestedVal(obj, propLessOneLev)\n    },\n\n    setNestedVal: function (obj, propArr, value) {\n        return propArr.reduce((innerObj, prop, level, arr) => {\n            if (level === arr.length - 1) {\n                innerObj[prop] = value;\n                return innerObj;\n            }\n\n            return innerObj[prop]\n        }, obj);\n    },\n\n    //obj - check object keys to see if id exists\n    generateUIDKey: function (obj) {\n        let ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        while(obj[ranNumStr]) {\n            ranNumStr = Math.floor(Math.random() * 1.0e+16).toString()\n        }\n        return ranNumStr;\n    },\n\n    addPrefix: function (condition, sting, prefix) {\n        return condition() ? sting : prefix + sting\n    },\n}","import React, { Component } from 'react'\nconst { addPrefix } = require('./helperModule.js');\n\n\nfunction InnerBar(props) {\n    const progPercent = (props.size <= 100 ? props.size : 100) + '%'\n\n    const innerBar = {\n        width: progPercent,\n    }\n\n    return (\n        <div className=\"bg-blue white\" style={innerBar}> {props.size}% </div>\n    )\n}\n\nfunction ProgressBar(props) {\n    return (\n        <div>\n            <div className=\"bg-light-gray\">\n                <InnerBar size={props.progress} />\n            </div>\n            <br />\n            <button onClick={props.onClick}> Click Me </button>\n        </div >\n    )\n}\n\nfunction Habit(props) {\n    return (\n        <div>\n            <p>{props.name}</p>\n            <ProgressBar progress={props.progress}\n                onClick={props.onClick} />\n            <p>Daily Occurence: {props.dailyOccurrence}</p>\n        </div>\n    )\n}\n\nclass Habits extends Component {\n    constructor(props) {\n        super(props)\n\n        const today = new Date()\n        const daysOfTheWeeks = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        const dayOfTheWeek = daysOfTheWeeks[today.getDay()]\n\n        const monthStr = (today.getMonth() + 1).toString()\n        const dayStr = today.getDate().toString()\n        const dateString = today.getFullYear() + '_'\n            + addPrefix(() => monthStr.length > 1, monthStr, '0')\n            + '_'\n            + addPrefix(() => dayStr.length > 1, dayStr, '0')\n\n        const JSONactiveHabitTemp = localStorage.getItem('activeHabitTemplates')\n        const activeHabitTemp = JSON.parse(JSONactiveHabitTemp)\n        console.log('LOADED activeHabitTemp: ', activeHabitTemp)\n\n        let habits = {}\n        if (activeHabitTemp) {\n            const JSONhabits = localStorage.getItem('habits_' + dateString)\n\n            if (JSONhabits === null) {\n                //Create new habits obj\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n                    if (activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        const habit = {}\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n                    return habits\n                }, {})\n            } else {\n                //Update old habits obj\n                const oldHabitsData = JSON.parse(JSONhabits)\n\n                habits = Object.keys(activeHabitTemp).reduce((habits, key) => {\n\n                    let habit = oldHabitsData[key]\n\n                    if(habit && activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]) {\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n\n                        habits[key] = habit\n                        return habits\n                    } else if(activeHabitTemp[key].weeklyOccurrence[dayOfTheWeek]){\n                        habit = {}\n                        habit.name = activeHabitTemp[key].name\n                        habit.dailyOccurrence = activeHabitTemp[key].dailyOccurrence\n                        habit.progress = 0\n\n                        habits[key] = habit\n                        return habits\n                    }\n\n                    return habits\n                }, {})\n            }\n        }\n\n        this.state = {\n            dayOfTheWeek: dayOfTheWeek,\n            dateString: dateString,\n            habits: habits,\n        }\n        console.log('CREATED Habit state: ', this.state)\n\n        this.saveHabitLocalStorage()\n    }\n\n    saveHabitLocalStorage() {\n        const habitsJson = JSON.stringify(this.state.habits)\n        localStorage.setItem('habits_' + this.state.dateString, habitsJson)\n        \n        console.log('SAVED Habits', habitsJson);\n    }\n\n    incrementProgress(id) {\n        console.log(`---\\nCLICKED habits['${id}']`);\n\n        let habits = {...this.state.habits}\n        let habit = habits[id]\n\n        const increment = 100 / habit.dailyOccurrence\n        habit.progress = habit.progress + increment\n\n        console.log('UPDATED ', habits[id])\n        this.setState({\n            habits: habits\n        }, this.saveHabitLocalStorage.bind(this))\n    }\n\n    render(props) {\n        const habits = {...this.state.habits}\n        const habitsEleMap = Object.keys(habits).map((key, i) => {\n            return (\n                <li key={key}>\n                    <Habit {...habits[key]} onClick={event => this.incrementProgress(key)} />\n                </li>\n            )\n        })\n\n        return (\n            <main className=\"wrapper\">\n                <div className=\"margin1\"></div>\n                <div className=\"content\">\n                    <p>\n                        {/* TODO add a Refresh to set the days */}\n                        {this.state.dayOfTheWeek}\n                    </p>\n                    {/* TODO if activeHabitTemp is null, then add button to the page to \"Create a Habit\". \n                    Also add message no \"Habits Today.\" */}\n                    <ul>\n                        {habitsEleMap}\n                    </ul>\n                </div>\n                <div className=\"margin2\"></div>\n            </main>\n        )\n    }\n}\n\nexport default Habits","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\n// import HabitTemplate from './HabitTemplate'\n// import HabitTemplates from './HabitTemplates'\nimport Habits from './Habits'\n\nimport './index.css'\n\n// data for HabitTemplate\n// const data = {\n//     \"name\": \"Push ups\",\n//     \"numberOfDays\": 32,\n//     \"weeklyOccurrence\": {\n//         \"Monday\": false,\n//         \"Tuesday\": false,\n//         \"Wednesday\": true,\n//         \"Thursday\": false,\n//         \"Friday\": true,\n//         \"Saturday\": false,\n//         \"Sunday\": false\n//     },\n//     \"dailyOccurrence\": 2,\n//     \"reminder\": true,\n//     \"reminderTimes\": \"8:30 PM\"\n// };\n\nconst data = {}\n\nReactDOM.render(<Habits {...data}/>, document.getElementById('root'))\n\n"],"sourceRoot":""}